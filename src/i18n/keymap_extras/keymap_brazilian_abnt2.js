/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ' │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ ´ │ [ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ç │ ~ │ ] │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
   * │    │ \ │ Z │ X │ C │ V │ B │ N │ M │ , │ . │ ; │ / │      │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬──┴─┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '"\n\'', title: 'BR_QUOT' },
  KC_1: { name: '!\n1', title: 'BR_1' },
  KC_2: { name: '@\n2', title: 'BR_2' },
  KC_3: { name: '#\n3', title: 'BR_3' },
  KC_4: { name: '$\n4', title: 'BR_4' },
  KC_5: { name: '%\n5', title: 'BR_5' },
  KC_6: { name: '¨\n6', title: 'BR_6' },
  KC_7: { name: '&\n7', title: 'BR_7' },
  KC_8: { name: '*\n8', title: 'BR_8' },
  KC_9: { name: '(\n9', title: 'BR_9' },
  KC_0: { name: ')\n0', title: 'BR_0' },
  KC_MINS: { name: '_\n-', title: 'BR_MINS' },
  KC_EQL: { name: '+\n=', title: 'BR_EQL' },
  // Row 2
  KC_Q: { name: 'Q', title: 'BR_Q' },
  KC_W: { name: 'W', title: 'BR_W' },
  KC_E: { name: 'E', title: 'BR_E' },
  KC_R: { name: 'R', title: 'BR_R' },
  KC_T: { name: 'T', title: 'BR_T' },
  KC_Y: { name: 'Y', title: 'BR_Y' },
  KC_U: { name: 'U', title: 'BR_U' },
  KC_I: { name: 'I', title: 'BR_I' },
  KC_O: { name: 'O', title: 'BR_O' },
  KC_P: { name: 'P', title: 'BR_P' },
  KC_LBRC: { name: '`\n´', title: 'BR_ACUT (dead)' },
  KC_RBRC: { name: '{\n[', title: 'BR_LBRC' },
  // Row 3
  KC_A: { name: 'A', title: 'BR_A' },
  KC_S: { name: 'S', title: 'BR_S' },
  KC_D: { name: 'D', title: 'BR_D' },
  KC_F: { name: 'F', title: 'BR_F' },
  KC_G: { name: 'G', title: 'BR_G' },
  KC_H: { name: 'H', title: 'BR_H' },
  KC_J: { name: 'J', title: 'BR_J' },
  KC_K: { name: 'K', title: 'BR_K' },
  KC_L: { name: 'L', title: 'BR_L' },
  KC_SCLN: { name: 'Ç', title: 'BR_CCED' },
  KC_QUOT: { name: '^\n~', title: 'BR_TILD (dead)' },
  KC_BSLS: { name: '}\n]', title: 'BR_RBRC' },
  // Row 4
  KC_NUBS: { name: '|\n\\', title: 'BR_BSLS' },
  KC_Z: { name: 'Z', title: 'BR_Z' },
  KC_X: { name: 'X', title: 'BR_X' },
  KC_C: { name: 'C', title: 'BR_C' },
  KC_V: { name: 'V', title: 'BR_V' },
  KC_B: { name: 'B', title: 'BR_B' },
  KC_N: { name: 'N', title: 'BR_N' },
  KC_M: { name: 'M', title: 'BR_M' },
  KC_COMM: { name: '<\n,', title: 'BR_COMM' },
  KC_DOT: { name: '>\n.', title: 'BR_DOT' },
  KC_SLSH: { name: ':\n;', title: 'BR_SCLN' },
  KC_INT1: { name: '?\n/', title: 'BR_SLSH' },
  // Numpad
  KC_PCMM: { name: '.', title: 'BR_PDOT' },
  KC_PDOT: { name: ',', title: 'BR_PCMM' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ " │ ! │ @ │ # │ $ │ % │ ¨ │ & │ * │ ( │ ) │ _ │ + │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ ` │ { │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │ ^ │ } │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
   * │    │ | │   │   │   │   │   │   │   │ < │ > │ : │ ? │      │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬──┴─┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '"', title: 'BR_DQUO' },
  KC_TILD: { name: '"', title: 'BR_DQUO' },
  'S(KC_1)': { name: '!', title: 'BR_EXLM' },
  KC_EXLM: { name: '!', title: 'BR_EXLM' },
  'S(KC_2)': { name: '@', title: 'BR_AT' },
  KC_AT: { name: '@', title: 'BR_AT' },
  'S(KC_3)': { name: '#', title: 'BR_HASH' },
  KC_HASH: { name: '#', title: 'BR_HASH' },
  'S(KC_4)': { name: '$', title: 'BR_DLR' },
  KC_DLR: { name: '$', title: 'BR_DLR' },
  'S(KC_5)': { name: '%', title: 'BR_PERC' },
  KC_PERC: { name: '%', title: 'BR_PERC' },
  'S(KC_6)': { name: '¨', title: 'BR_DIAE (dead)' },
  KC_CIRC: { name: '¨', title: 'BR_DIAE (dead)' },
  'S(KC_7)': { name: '&', title: 'BR_AMPR' },
  KC_AMPR: { name: '&', title: 'BR_AMPR' },
  'S(KC_8)': { name: '*', title: 'BR_ASTR' },
  KC_ASTR: { name: '*', title: 'BR_ASTR' },
  'S(KC_9)': { name: '(', title: 'BR_LPRN' },
  KC_LPRN: { name: '(', title: 'BR_LPRN' },
  'S(KC_0)': { name: ')', title: 'BR_RPRN' },
  KC_RPRN: { name: ')', title: 'BR_RPRN' },
  'S(KC_MINS)': { name: '_', title: 'BR_UNDS' },
  KC_UNDS: { name: '_', title: 'BR_UNDS' },
  'S(KC_EQL)': { name: '+', title: 'BR_PLUS' },
  KC_PLUS: { name: '+', title: 'BR_PLUS' },
  // Row 2
  'S(KC_LBRC)': { name: '`', title: 'BR_GRV (dead)' },
  KC_LCBR: { name: '`', title: 'BR_GRV (dead)' },
  'S(KC_RBRC)': { name: '{', title: 'BR_LCBR' },
  KC_RCBR: { name: '{', title: 'BR_LCBR' },
  // Row 3
  'S(KC_QUOT)': { name: '^', title: 'BR_CIRC (dead)' },
  KC_DQUO: { name: '^', title: 'BR_CIRC (dead)' },
  'S(KC_BSLS)': { name: '}', title: 'BR_RCBR' },
  KC_PIPE: { name: '}', title: 'BR_RCBR' },
  // Row 4
  'S(KC_NUBS)': { name: '|', title: 'BR_PIPE' },
  'S(KC_COMM)': { name: '<', title: 'BR_LABK' },
  KC_LT: { name: '<', title: 'BR_LABK' },
  'S(KC_DOT)': { name: '>', title: 'BR_RABK' },
  KC_GT: { name: '>', title: 'BR_RABK' },
  'S(KC_SLSH)': { name: ':', title: 'BR_COLN' },
  KC_QUES: { name: ':', title: 'BR_COLN' },
  'S(KC_INT1)': { name: '?', title: 'BR_QUES' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │ ¹ │ ² │ ³ │ £ │ ¢ │ ¬ │   │   │   │   │   │ § │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │ ° │   │   │   │   │   │   │   │   │ ª │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │   │ º │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
   * │    │   │   │   │ ₢ │   │   │   │   │   │   │   │   │      │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬──┴─┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_1)': { name: '¹', title: 'BR_SUP1' },
  'ALGR(KC_2)': { name: '²', title: 'BR_SUP2' },
  'ALGR(KC_3)': { name: '³', title: 'BR_SUP3' },
  'ALGR(KC_4)': { name: '£', title: 'BR_PND' },
  'ALGR(KC_5)': { name: '¢', title: 'BR_CENT' },
  'ALGR(KC_6)': { name: '¬', title: 'BR_NOT' },
  'ALGR(KC_EQL)': { name: '§', title: 'BR_SECT' },
  // Row 2
  'ALGR(KC_E)': { name: '°', title: 'BR_DEG' },
  'ALGR(KC_RBRC)': { name: 'ª', title: 'BR_FORD' },
  // Row 3
  'ALGR(KC_BSLS)': { name: 'º', title: 'BR_MORD' },
  // Row 4
  'ALGR(KC_C)': { name: '₢', title: 'BR_CRUZ' },

  /* Other keys */
  KC_NUHS: { name: '}\n]', title: '' },
  'S(KC_NUHS)': { name: '}', title: '' },
  KC_COLN: { name: 'Ç', title: 'S(BR_CCED) (capital Ç)' },

  SC_LSPO: { name: 'LS / (', title: 'Left Shift when held, ( when tapped' },
  SC_RSPC: { name: 'RS / )', title: 'Right Shift when held, ) when tapped' },
  SC_LCPO: { name: 'LC / (', title: 'Left Control when held, ( when tapped' },
  SC_RCPC: { name: 'RC / )', title: 'Right Control when held, ) when tapped' },
  SC_LAPO: { name: 'LA / (', title: 'Left Alt when held, ( when tapped' },
  SC_RAPC: { name: 'RA / )', title: 'Right Alt when held, ) when tapped' },

  QK_GESC: {
    name: '\'/"\nEsc',
    title: 'Esc normally, but \' when GUI is active or " when Shift is active'
  }
};
