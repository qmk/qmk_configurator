/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ [ │ ] │  \  │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤
   * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ ; │ ´ │        │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤
   * │        │ Z │ X │ C │ V │ B │ N │ M │ , │ . │ / │          │
   * ├────┬───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '~\n`', alias: 'US_DGRV', title: '◌̀ (dead) and ◌̃ (dead)' },
  KC_1: { name: '!\n1', alias: 'US_1', title: '1 and !' },
  KC_2: { name: '@\n2', alias: 'US_2', title: '2 and @' },
  KC_3: { name: '#\n3', alias: 'US_3', title: '3 and #' },
  KC_4: { name: '$\n4', alias: 'US_4', title: '4 and $' },
  KC_5: { name: '%\n5', alias: 'US_5', title: '5 and %' },
  KC_6: { name: '^\n6', alias: 'US_6', title: '6 and ◌̂ (dead)' },
  KC_7: { name: '&\n7', alias: 'US_7', title: '7 and &' },
  KC_8: { name: '*\n8', alias: 'US_8', title: '8 and *' },
  KC_9: { name: '(\n9', alias: 'US_9', title: '9 and (' },
  KC_0: { name: ')\n0', alias: 'US_0', title: '0 and )' },
  KC_MINS: { name: '_\n-', alias: 'US_MINS', title: '- and _' },
  KC_EQL: { name: '+\n=', alias: 'US_EQL', title: '= and +' },
  // Row 2
  KC_Q: { name: 'Q', alias: 'US_Q', title: 'q and Q' },
  KC_W: { name: 'W', alias: 'US_W', title: 'w and W' },
  KC_E: { name: 'E', alias: 'US_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'US_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'US_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'US_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'US_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'US_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'US_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'US_P', title: 'p and P' },
  KC_LBRC: { name: '{\n[', alias: 'US_LBRC', title: '[ and {' },
  KC_RBRC: { name: '}\n]', alias: 'US_RBRC', title: '] and }' },
  KC_BSLS: { name: '|\n\\', alias: 'US_BSLS', title: '\\ and |' },
  // Row 3
  KC_A: { name: 'A', alias: 'US_A', title: 'a and A' },
  KC_S: { name: 'S', alias: 'US_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'US_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'US_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'US_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'US_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'US_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'US_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'US_L', title: 'l and L' },
  KC_SCLN: { name: ':\n;', alias: 'US_SCLN', title: '; and :' },
  KC_QUOT: {
    name: '¨\n´',
    alias: 'US_ACUT',
    title: '◌́ (dead) and ◌̈ (dead)'
  },
  // Row 4
  KC_Z: { name: 'Z', alias: 'US_Z', title: 'z and Z' },
  KC_X: { name: 'X', alias: 'US_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'US_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'US_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'US_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'US_N', title: 'n and N' },
  KC_M: { name: 'M', alias: 'US_M', title: 'm and M' },
  KC_COMM: { name: '<\n,', alias: 'US_COMM', title: ', and <' },
  KC_DOT: { name: '>\n.', alias: 'US_DOT', title: '. and >' },
  KC_SLSH: { name: '?\n/', alias: 'US_SLSH', title: '/ and ?' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ~ │ ! │ @ │ # │ $ │ % │ ^ │ & │ * │ ( │ ) │ _ │ + │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ { │ } │  |  │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤
   * │      │   │   │   │   │   │   │   │   │   │ : │ ¨ │        │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤
   * │        │   │   │   │   │   │   │   │ < │ > │ ? │          │
   * ├────┬───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '~', alias: 'US_DTIL', title: '◌̃ (dead)' },
  KC_TILD: { name: '~', alias: 'US_DTIL', title: '◌̃ (dead)' },
  'S(KC_1)': { name: '!', alias: 'US_EXLM', title: '!' },
  KC_EXLM: { name: '!', alias: 'US_EXLM', title: '!' },
  'S(KC_2)': { name: '@', alias: 'US_AT', title: '@' },
  KC_AT: { name: '@', alias: 'US_AT', title: '@' },
  'S(KC_3)': { name: '#', alias: 'US_HASH', title: '#' },
  KC_HASH: { name: '#', alias: 'US_HASH', title: '#' },
  'S(KC_4)': { name: '$', alias: 'US_DLR', title: '$' },
  KC_DLR: { name: '$', alias: 'US_DLR', title: '$' },
  'S(KC_5)': { name: '%', alias: 'US_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'US_PERC', title: '%' },
  'S(KC_6)': { name: '^', alias: 'US_DCIR', title: '◌̂ (dead)' },
  KC_CIRC: { name: '^', alias: 'US_DCIR', title: '◌̂ (dead)' },
  'S(KC_7)': { name: '&', alias: 'US_AMPR', title: '&' },
  KC_AMPR: { name: '&', alias: 'US_AMPR', title: '&' },
  'S(KC_8)': { name: '*', alias: 'US_ASTR', title: '*' },
  KC_ASTR: { name: '*', alias: 'US_ASTR', title: '*' },
  'S(KC_9)': { name: '(', alias: 'US_LPRN', title: '(' },
  KC_LPRN: { name: '(', alias: 'US_LPRN', title: '(' },
  'S(KC_0)': { name: ')', alias: 'US_RPRN', title: ')' },
  KC_RPRN: { name: ')', alias: 'US_RPRN', title: ')' },
  'S(KC_MINS)': { name: '_', alias: 'US_UNDS', title: '_' },
  KC_UNDS: { name: '_', alias: 'US_UNDS', title: '_' },
  'S(KC_EQL)': { name: '+', alias: 'US_PLUS', title: '+' },
  KC_PLUS: { name: '+', alias: 'US_PLUS', title: '+' },
  // Row 2
  'S(KC_LBRC)': { name: '{', alias: 'US_LCBR', title: '{' },
  KC_LCBR: { name: '{', alias: 'US_LCBR', title: '{' },
  'S(KC_RBRC)': { name: '}', alias: 'US_RCBR', title: '}' },
  KC_RCBR: { name: '}', alias: 'US_RCBR', title: '}' },
  'S(KC_BSLS)': { name: '|', alias: 'US_PIPE', title: '|' },
  KC_PIPE: { name: '|', alias: 'US_PIPE', title: '|' },
  // Row 3
  'S(KC_SCLN)': { name: ':', alias: 'US_COLN', title: ':' },
  KC_COLN: { name: ':', alias: 'US_COLN', title: ':' },
  'S(KC_QUOT)': { name: '¨', alias: 'US_DIAE', title: '◌̈ (dead)' },
  KC_DQUO: { name: '¨', alias: 'US_DIAE', title: '◌̈ (dead)' },
  // Row 4
  'S(KC_COMM)': { name: '<', alias: 'US_LABK', title: '<' },
  KC_LT: { name: '<', alias: 'US_LABK', title: '<' },
  'S(KC_DOT)': { name: '>', alias: 'US_RABK', title: '>' },
  KC_GT: { name: '>', alias: 'US_RABK', title: '>' },
  'S(KC_SLSH)': { name: '?', alias: 'US_QUES', title: '?' },
  KC_QUES: { name: '?', alias: 'US_QUES', title: '?' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ` │ ¡ │ ² │ ³ │ ¤ │ € │ ¼ │ ½ │ ¾ │ ‘ │ ’ │ ¥ │ × │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ Ä │ Å │ É │ ® │ Þ │ Ü │ Ú │ Í │ Ó │ Ö │ « │ » │  ¬  │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤
   * │      │ Á │ ß │ Ð │   │   │   │   │ Œ │ Ø │ ¶ │ ' │        │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤
   * │        │ Æ │   │ © │   │   │ Ñ │ µ │ Ç │ ˙ │ ¿ │          │
   * ├────┬───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */

  // Row 1
  'ALGR(KC_GRV)': { name: '`', alias: 'US_GRV', title: '`' },
  'ALGR(KC_1)': { name: '¡', alias: 'US_IEXL', title: '¡' },
  'ALGR(KC_2)': { name: '²', alias: 'US_SUP2', title: '²' },
  'ALGR(KC_3)': { name: '³', alias: 'US_SUP3', title: '³' },
  'ALGR(KC_4)': { name: '¤', alias: 'US_CURR', title: '¤' },
  'ALGR(KC_5)': { name: '€', alias: 'US_EURO', title: '€' },
  'ALGR(KC_6)': { name: '¼', alias: 'US_QRTR', title: '¼' },
  'ALGR(KC_7)': { name: '½', alias: 'US_HALF', title: '½' },
  'ALGR(KC_8)': { name: '¾', alias: 'US_TQTR', title: '¾' },
  'ALGR(KC_9)': { name: '‘', alias: 'US_LSQU', title: '‘' },
  'ALGR(KC_0)': { name: '’', alias: 'US_RSQU', title: '’' },
  'ALGR(KC_MINS)': { name: '¥', alias: 'US_YEN', title: '¥' },
  'ALGR(KC_EQL)': { name: '×', alias: 'US_MUL', title: '×' },
  // Row 2
  'ALGR(KC_Q)': { name: 'Ä', alias: 'US_ADIA', title: 'Ä' },
  'ALGR(KC_W)': { name: 'Å', alias: 'US_ARNG', title: 'Å' },
  'ALGR(KC_E)': { name: 'É', alias: 'US_EACU', title: 'É' },
  'ALGR(KC_R)': { name: '®', alias: 'US_REGD', title: '®' },
  'ALGR(KC_T)': { name: 'Þ', alias: 'US_THRN', title: 'Þ' },
  'ALGR(KC_Y)': { name: 'Ü', alias: 'US_UDIA', title: 'Ü' },
  'ALGR(KC_U)': { name: 'Ú', alias: 'US_UACU', title: 'Ú' },
  'ALGR(KC_I)': { name: 'Í', alias: 'US_IACU', title: 'Í' },
  'ALGR(KC_O)': { name: 'Ó', alias: 'US_OACU', title: 'Ó' },
  'ALGR(KC_P)': { name: 'Ö', alias: 'US_ODIA', title: 'Ö' },
  'ALGR(KC_LBRC)': { name: '«', alias: 'US_LDAQ', title: '«' },
  'ALGR(KC_RBRC)': { name: '»', alias: 'US_RDAQ', title: '»' },
  'ALGR(KC_BSLS)': { name: '¬', alias: 'US_NOT', title: '¬' },
  // Row 3
  'ALGR(KC_A)': { name: 'Á', alias: 'US_AACU', title: 'Á' },
  'ALGR(KC_S)': { name: 'ß', alias: 'US_SS', title: 'ß' },
  'ALGR(KC_D)': { name: 'Ð', alias: 'US_ETH', title: 'Ð' },
  'ALGR(KC_K)': { name: 'Œ', alias: 'US_OE', title: 'Œ' },
  'ALGR(KC_L)': { name: 'Ø', alias: 'US_OSTR', title: 'Ø' },
  'ALGR(KC_SCLN)': { name: '¶', alias: 'US_PILC', title: '¶' },
  'ALGR(KC_QUOT)': { name: "'", alias: 'US_QUOT', title: "'" },
  // Row 4
  'ALGR(KC_Z)': { name: 'Æ', alias: 'US_AE', title: 'Æ' },
  'ALGR(KC_C)': { name: '©', alias: 'US_COPY', title: '©' },
  'ALGR(KC_N)': { name: 'Ñ', alias: 'US_NTIL', title: 'Ñ' },
  'ALGR(KC_M)': { name: 'µ', alias: 'US_MICR', title: 'µ' },
  'ALGR(KC_COMM)': { name: 'Ç', alias: 'US_CCED', title: 'Ç' },
  'ALGR(KC_DOT)': { name: '˙', alias: 'US_DOTA', title: '◌̇ (dead)' },
  'ALGR(KC_SLSH)': { name: '¿', alias: 'US_IQUE', title: '¿' },

  /* Shift+AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ~ │ ¹ │ ˝ │ ¯ │ £ │ ¸ │ ^ │ ̛  │ ˛ │ ˘ │ ° │ ̣  │ ÷ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ “ │ ” │  ¦  │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤
   * │      │   │ § │   │   │   │   │   │   │   │ ° │ " │        │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤
   * │        │   │   │ ¢ │   │   │   │   │   │ ˇ │ ̉  │          │
   * ├────┬───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(ALGR(KC_GRV))': { name: '~', alias: 'US_TILD', title: '~' },
  'S(ALGR(KC_1))': { name: '¹', alias: 'US_SUP1', title: '¹' },
  'S(ALGR(KC_2))': { name: '˝', alias: 'US_DACU', title: '◌̋ (dead)' },
  'S(ALGR(KC_3))': { name: '¯', alias: 'US_MACR', title: '◌̄ (dead)' },
  'S(ALGR(KC_4))': { name: '£', alias: 'US_PND', title: '£' },
  'S(ALGR(KC_5))': { name: '¸', alias: 'US_CEDL', title: '◌̧ (dead)' },
  'S(ALGR(KC_6))': { name: '^', alias: 'US_CIRC', title: '^' },
  'S(ALGR(KC_7))': { name: '◌̛', alias: 'US_HORN', title: '◌̛ (dead)' },
  'S(ALGR(KC_8))': { name: '˛', alias: 'US_OGON', title: '◌̨ (dead)' },
  'S(ALGR(KC_9))': { name: '˘', alias: 'US_BREV', title: '◌̆ (dead)' },
  'S(ALGR(KC_0))': { name: '°', alias: 'US_RNGA', title: '◌̊ (dead)' },
  'S(ALGR(KC_MINS))': { name: '◌̣', alias: 'US_DOTB', title: '◌̣ (dead)' },
  'S(ALGR(KC_EQL))': { name: '÷', alias: 'US_DIV', title: '÷' },
  // Row 2
  'S(ALGR(KC_LBRC))': { name: '“', alias: 'US_LDQU', title: '“' },
  'S(ALGR(KC_RBRC))': { name: '”', alias: 'US_RDQU', title: '”' },
  'S(ALGR(KC_BSLS))': { name: '¦', alias: 'US_BRKP', title: '¦' },
  // Row 3
  'S(ALGR(KC_S))': { name: '§', alias: 'US_SECT', title: '§' },
  'S(ALGR(KC_SCLN))': { name: '°', alias: 'US_DEG', title: '°' },
  'S(ALGR(KC_QUOT))': { name: '"', alias: 'US_DQUO', title: '"' },
  // Row 4
  'S(ALGR(KC_C))': { name: '¢', alias: 'US_CENT', title: '¢' },
  'S(ALGR(KC_DOT))': { name: 'ˇ', alias: 'US_CARN', title: '◌̌ (dead)' },
  'S(ALGR(KC_SLSH))': { name: '◌̉', alias: 'US_HOKA', title: '◌̉ (dead)' },

  /* Other keys */
  KC_NUHS: { name: '|\n\\', title: '\\ and |' },
  'S(KC_NUHS)': { name: '|', title: '|' },
  KC_NUBS: { name: '|\n\\', title: '\\ and |' },
  'S(KC_NUBS)': { name: '|', title: '|' },

  SC_LSPO: { name: 'LS / (', title: 'Left Shift when held, ( when tapped' },
  SC_RSPC: { name: 'RS / )', title: 'Right Shift when held, ) when tapped' },
  SC_LCPO: { name: 'LC / (', title: 'Left Control when held, ( when tapped' },
  SC_RCPC: { name: 'RC / )', title: 'Right Control when held, ) when tapped' },
  SC_LAPO: { name: 'LA / (', title: 'Left Alt when held, ( when tapped' },
  SC_RAPC: { name: 'RA / )', title: 'Right Alt when held, ) when tapped' },

  QK_GESC: {
    name: '`/~\nEsc',
    title: 'Esc normally, but ` when GUI is active or ~ when Shift is active'
  }
};
