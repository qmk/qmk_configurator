/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * JP106-layout (Japanese Standard)
 *
 * For more information, see
 * http://www2d.biglobe.ne.jp/~msyk/keyboard/layout/usbkeycode.html
 * note: This website is written in Japanese.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┐
   * │Z↔H│ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ ^ │ ¥ │   │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┤
   * │     │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ @ │ [ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │ Eisū │ A │ S │ D │ F │ G │ H │ J │ K │ L │ ; │ : │ ] │    │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
   * │        │ Z │ X │ C │ V │ B │ N │ M │ , │ . │ / │ \ │      │
   * ├─────┬──┴┬──┴──┬┴───┴┬──┴───┴──┬┴───┴┬──┴┬──┴┬──┴┬──┴┬─────┤
   * │     │   │     │Muhen│         │ Hen │K↔H│   │   │   │     │
   * └─────┴───┴─────┴─────┴─────────┴─────┴───┴───┴───┴───┴─────┘
   */
  // Row 1
  KC_GRV: {
    name: '半角 / 全角',
    alias: 'JP_ZKHK',
    title: '半角 (Zenkaku) ↔ 全角 (Hankaku) ↔ 漢字 (Kanji)'
  },
  KC_1: { name: '!\n1', alias: 'JP_1', title: '1 and !' },
  KC_2: { name: '"\n2', alias: 'JP_2', title: '2 and "' },
  KC_3: { name: '#\n3', alias: 'JP_3', title: '3 and #' },
  KC_4: { name: '$\n4', alias: 'JP_4', title: '4 and $' },
  KC_5: { name: '%\n5', alias: 'JP_5', title: '5 and %' },
  KC_6: { name: '&\n6', alias: 'JP_6', title: '6 and &' },
  KC_7: { name: "'\n7", alias: 'JP_7', title: "7 and '" },
  KC_8: { name: '(\n8', alias: 'JP_8', title: '8 and (' },
  KC_9: { name: ')\n9', alias: 'JP_9', title: '9 and )' },
  KC_0: { name: '0', alias: 'JP_0', title: '0' },
  KC_MINS: { name: '=\n-', alias: 'JP_MINS', title: '- and =' },
  KC_EQL: { name: '~\n^', alias: 'JP_CIRC', title: '^ and ~' },
  KC_INT3: { name: '|\n¥', alias: 'JP_YEN', title: '¥ and |' },
  // Row 2
  KC_Q: { name: 'Q', alias: 'JP_Q', title: 'q and Q' },
  KC_W: { name: 'W', alias: 'JP_W', title: 'w and W' },
  KC_E: { name: 'E', alias: 'JP_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'JP_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'JP_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'JP_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'JP_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'JP_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'JP_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'JP_P', title: 'p and P' },
  KC_LBRC: { name: '`\n@', alias: 'JP_AT', title: '@ and `' },
  KC_RBRC: { name: '{\n[', alias: 'JP_LBRC', title: '[ and {' },
  // Row 3
  KC_CAPS: { name: 'Caps Lock\nEisū', alias: 'JP_EISU', title: '英数 (Eisū)' },
  KC_A: { name: 'A', alias: 'JP_A', title: 'a and A' },
  KC_S: { name: 'S', alias: 'JP_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'JP_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'JP_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'JP_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'JP_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'JP_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'JP_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'JP_L', title: 'l and L' },
  KC_SCLN: { name: '+\n;', alias: 'JP_SCLN', title: '; and +' },
  KC_QUOT: { name: '*\n:', alias: 'JP_COLN', title: ': and *' },
  KC_NUHS: { name: '}\n]', alias: 'JP_RBRC', title: '] and }' },
  // Row 4
  KC_Z: { name: 'Z', alias: 'JP_Z', title: 'z and Z' },
  KC_X: { name: 'X', alias: 'JP_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'JP_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'JP_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'JP_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'JP_N', title: 'n and N' },
  KC_M: { name: 'M', alias: 'JP_M', title: 'm and M' },
  KC_COMM: { name: '<\n,', alias: 'JP_COMM', title: ', and <' },
  KC_DOT: { name: '>\n.', alias: 'JP_DOT', title: '. and >' },
  KC_SLSH: { name: '?\n/', alias: 'JP_SLSH', title: '/ and ?' },
  KC_INT1: { name: '_\n\\', alias: 'JP_BSLS', title: '\\ and _' },
  // Row 5
  KC_INT5: { name: '無変換', alias: 'JP_MHEN', title: '無変換 (Muhenkan)' },
  KC_INT4: { name: '変換', alias: 'JP_HENK', title: '変換 (Henkan)' },
  KC_INT2: {
    name: 'カタカナ\nひらがな',
    alias: 'JP_KANA',
    title: 'カタカナ (Katakana) ↔ ひらがな (Hiragana) ↔ ローマ字 (Rōmaji)'
  },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┐
   * │   │ ! │ " │ # │ $ │ % │ & │ ' │ ( │ ) │   │ = │ ~ │ | │   │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┤
   * │     │   │   │   │   │   │   │   │   │   │   │ ` │ { │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │ Caps │   │   │   │   │   │   │   │   │   │ + │ * │ } │    │
   * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────┤
   * │        │   │   │   │   │   │   │   │ < │ > │ ? │ _ │      │
   * ├─────┬──┴┬──┴──┬┴───┴┬──┴───┴──┬┴───┴┬──┴┬──┴┬──┴┬──┴┬─────┤
   * │     │   │     │     │         │     │   │   │   │   │     │
   * └─────┴───┴─────┴─────┴─────────┴─────┴───┴───┴───┴───┴─────┘
   */
  // Row 1
  'S(KC_1)': { name: '!', alias: 'JP_EXLM', title: '!' },
  KC_EXLM: { name: '!', alias: 'JP_EXLM', title: '!' },
  'S(KC_2)': { name: '"', alias: 'JP_DQUO', title: '"' },
  KC_AT: { name: '"', alias: 'JP_DQUO', title: '"' },
  'S(KC_3)': { name: '#', alias: 'JP_HASH', title: '#' },
  KC_HASH: { name: '#', alias: 'JP_HASH', title: '#' },
  'S(KC_4)': { name: '$', alias: 'JP_DLR', title: '$' },
  KC_DLR: { name: '$', alias: 'JP_DLR', title: '$' },
  'S(KC_5)': { name: '%', alias: 'JP_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'JP_PERC', title: '%' },
  'S(KC_6)': { name: '&', alias: 'JP_AMPR', title: '&' },
  KC_CIRC: { name: '&', alias: 'JP_AMPR', title: '&' },
  'S(KC_7)': { name: "'", alias: 'JP_QUOT', title: "'" },
  KC_AMPR: { name: "'", alias: 'JP_QUOT', title: "'" },
  'S(KC_8)': { name: '(', alias: 'JP_LPRN', title: '(' },
  KC_ASTR: { name: '(', alias: 'JP_LPRN', title: '(' },
  'S(KC_9)': { name: ')', alias: 'JP_RPRN', title: ')' },
  KC_LPRN: { name: ')', alias: 'JP_RPRN', title: ')' },
  'S(KC_MINS)': { name: '=', alias: 'JP_EQL', title: '=' },
  KC_UNDS: { name: '=', alias: 'JP_EQL', title: '=' },
  'S(KC_EQL)': { name: '~', alias: 'JP_TILD', title: '~' },
  KC_PLUS: { name: '~', alias: 'JP_TILD', title: '~' },
  'S(KC_INT3)': { name: '|', alias: 'JP_PIPE', title: '|' },
  // Row 2
  'S(KC_LBRC)': { name: '`', alias: 'JP_GRV', title: '`' },
  KC_LCBR: { name: '`', alias: 'JP_GRV', title: '`' },
  'S(KC_RBRC)': { name: '{', alias: 'JP_LCBR', title: '{' },
  KC_RCBR: { name: '{', alias: 'JP_LCBR', title: '{' },
  // Row 3
  'S(KC_CAPS)': { name: 'Caps Lock', alias: 'JP_CAPS', title: 'Caps Lock' },
  'S(KC_SCLN)': { name: '+', alias: 'JP_PLUS', title: '+' },
  KC_COLN: { name: '+', alias: 'JP_PLUS', title: '+' },
  'S(KC_QUOT)': { name: '*', alias: 'JP_ASTR', title: '*' },
  KC_DQUO: { name: '*', alias: 'JP_ASTR', title: '*' },
  'S(KC_NUHS)': { name: '}', alias: 'JP_RCBR', title: '}' },
  // Row 4
  'S(KC_COMM)': { name: '<', alias: 'JP_LABK', title: '<' },
  KC_LT: { name: '<', alias: 'JP_LABK', title: '<' },
  'S(KC_DOT)': { name: '>', alias: 'JP_RABK', title: '>' },
  KC_GT: { name: '>', alias: 'JP_RABK', title: '>' },
  'S(KC_SLSH)': { name: '?', alias: 'JP_QUES', title: '?' },
  KC_QUES: { name: '?', alias: 'JP_QUES', title: '?' },
  'S(KC_INT1)': { name: '_', alias: 'JP_UNDS', title: '_' },

  /* Other keys */
  KC_BSLS: { name: '}\n]', title: '] and }' },
  'S(KC_BSLS)': { name: '}', title: '}' },
  KC_NUBS: { name: '}\n]', title: '] and }' },
  'S(KC_NUBS)': { name: '}', title: '}' },
  KC_TILD: {
    name: '半角 / 全角',
    alias: 'S(JP_ZKHK)',
    title: '半角 (Zenkaku) ↔ 全角 (Hankaku) ↔ 漢字 (Kanji)'
  },
  KC_RPRN: { name: '0', alias: 'S(JP_0)', title: '0' },
  KC_PIPE: { name: '}', alias: 'JP_RCBR', title: '}' },

  SC_LSPO: { name: 'LS / )', title: 'Left Shift when held, ) when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / )', title: 'Left Control when held, ) when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / )', title: 'Left Alt when held, ) when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '半角/全角\nEsc',
    title:
      'Esc normally, but Zenkaku ↔ Hankaku ↔ Kanji when Shift or GUI is active'
  }
};
