/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ 0 │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ Ö │ Ü │ Ó │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ Q │ W │ E │ R │ T │ Z │ U │ I │ O │ P │ Ő │ Ú │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ É │ Á │ Ű │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ Í │ Y │ X │ C │ V │ B │ N │ M │ , │ . │ - │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '§\n0', alias: 'HU_0', title: '0 and §' },
  KC_1: { name: "'\n1", alias: 'HU_1', title: "1 and '" },
  KC_2: { name: '"\n2', alias: 'HU_2', title: '2 and "' },
  KC_3: { name: '+\n3', alias: 'HU_3', title: '3 and +' },
  KC_4: { name: '!\n4', alias: 'HU_4', title: '4 and !' },
  KC_5: { name: '%\n5', alias: 'HU_5', title: '5 and %' },
  KC_6: { name: '/\n6', alias: 'HU_6', title: '6 and /' },
  KC_7: { name: '=\n7', alias: 'HU_7', title: '7 and =' },
  KC_8: { name: '(\n8', alias: 'HU_8', title: '8 and (' },
  KC_9: { name: ')\n9', alias: 'HU_9', title: '9 and )' },
  KC_0: { name: 'Ö', alias: 'HU_ODIA', title: 'ö and Ö' },
  KC_MINS: { name: 'Ü', alias: 'HU_UDIA', title: 'ü and Ü' },
  KC_EQL: { name: 'Ó', alias: 'HU_OACU', title: 'ó and Ó' },
  // Row 2
  KC_Q: { name: 'Q', alias: 'HU_Q', title: 'q and Q' },
  KC_W: { name: 'W', alias: 'HU_W', title: 'w and W' },
  KC_E: { name: 'E', alias: 'HU_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'HU_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'HU_T', title: 't and T' },
  KC_Y: { name: 'Z', alias: 'HU_Z', title: 'z and Z' },
  KC_U: { name: 'U', alias: 'HU_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'HU_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'HU_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'HU_P', title: 'p and P' },
  KC_LBRC: { name: 'Ő', alias: 'HU_ODAC', title: 'ő and Ő' },
  KC_RBRC: { name: 'Ú', alias: 'HU_UACU', title: 'ú and Ú' },
  // Row 3
  KC_A: { name: 'A', alias: 'HU_A', title: 'a and A' },
  KC_S: { name: 'S', alias: 'HU_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'HU_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'HU_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'HU_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'HU_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'HU_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'HU_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'HU_L', title: 'l and L' },
  KC_SCLN: { name: 'É', alias: 'HU_EACU', title: 'é and É' },
  KC_QUOT: { name: 'Á', alias: 'HU_AACU', title: 'á and Á' },
  KC_NUHS: { name: 'Ű', alias: 'HU_UDAC', title: 'ű and Ű' },
  // Row 4
  KC_NUBS: { name: 'Í', alias: 'HU_IACU', title: 'í and Í' },
  KC_Z: { name: 'Y', alias: 'HU_Y', title: 'y and Y' },
  KC_X: { name: 'X', alias: 'HU_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'HU_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'HU_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'HU_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'HU_N', title: 'n and N' },
  KC_M: { name: 'M', alias: 'HU_M', title: 'm and M' },
  KC_COMM: { name: '?\n,', alias: 'HU_COMM', title: ', and ?' },
  KC_DOT: { name: ':\n.', alias: 'HU_DOT', title: '. and :' },
  KC_SLSH: { name: '_\n-', alias: 'HU_MINS', title: '- and _' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ § │ ' │ " │ + │ ! │ % │ / │ = │ ( │ ) │   │   │   │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │   │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │   │   │   │   │ ? │ : │ _ │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '§', alias: 'HU_SECT', title: '§' },
  KC_TILD: { name: '§', alias: 'HU_SECT', title: '§' },
  'S(KC_1)': { name: "'", alias: 'HU_QUOT', title: "'" },
  KC_EXLM: { name: "'", alias: 'HU_QUOT', title: "'" },
  'S(KC_2)': { name: '"', alias: 'HU_DQUO', title: '"' },
  KC_AT: { name: '"', alias: 'HU_DQUO', title: '"' },
  'S(KC_3)': { name: '+', alias: 'HU_PLUS', title: '+' },
  KC_HASH: { name: '+', alias: 'HU_PLUS', title: '+' },
  'S(KC_4)': { name: '!', alias: 'HU_EXLM', title: '!' },
  KC_DLR: { name: '!', alias: 'HU_EXLM', title: '!' },
  'S(KC_5)': { name: '%', alias: 'HU_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'HU_PERC', title: '%' },
  'S(KC_6)': { name: '/', alias: 'HU_SLSH', title: '/' },
  KC_CIRC: { name: '/', alias: 'HU_SLSH', title: '/' },
  'S(KC_7)': { name: '=', alias: 'HU_EQL', title: '=' },
  KC_AMPR: { name: '=', alias: 'HU_EQL', title: '=' },
  'S(KC_8)': { name: '(', alias: 'HU_LPRN', title: '(' },
  KC_ASTR: { name: '(', alias: 'HU_LPRN', title: '(' },
  'S(KC_9)': { name: ')', alias: 'HU_RPRN', title: ')' },
  KC_LPRN: { name: ')', alias: 'HU_RPRN', title: ')' },
  // Row 4
  'S(KC_COMM)': { name: '?', alias: 'HU_QUES', title: '?' },
  KC_LT: { name: '?', alias: 'HU_QUES', title: '?' },
  'S(KC_DOT)': { name: ':', alias: 'HU_COLN', title: ':' },
  KC_GT: { name: ':', alias: 'HU_COLN', title: ':' },
  'S(KC_SLSH)': { name: '_', alias: 'HU_UNDS', title: '_' },
  KC_QUES: { name: '_', alias: 'HU_UNDS', title: '_' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │ ~ │ ˇ │ ^ │ ˘ │ ° │ ˛ │ ` │ ˙ │ ´ │ ˝ │ ¨ │ ¸ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ \ │ | │ Ä │   │   │   │ € │   │   │   │ ÷ │ × │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ ä │ đ │ Đ │ [ │ ] │   │   │ ł │ Ł │ $ │ ß │ ¤ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ < │ > │ # │ & │ @ │ { │ } │   │ ; │   │ * │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_1)': { name: '~', alias: 'HU_TILD', title: '~' },
  'ALGR(KC_2)': { name: 'ˇ', alias: 'HU_CARN', title: '◌̌ (dead)' },
  'ALGR(KC_3)': { name: '^', alias: 'HU_CIRC', title: '◌̂ (dead)' },
  'ALGR(KC_4)': { name: '˘', alias: 'HU_BREV', title: '◌̆ (dead)' },
  'ALGR(KC_5)': { name: '°', alias: 'HU_RNGA', title: '◌̊ (dead)' },
  'ALGR(KC_6)': { name: '˛', alias: 'HU_OGON', title: '◌̨ (dead)' },
  'ALGR(KC_7)': { name: '`', alias: 'HU_GRV', title: '`' },
  'ALGR(KC_8)': { name: '˙', alias: 'HU_DOTA', title: '◌̇ (dead)' },
  'ALGR(KC_9)': { name: '´', alias: 'HU_ACUT', title: '◌́ (dead)' },
  'ALGR(KC_0)': { name: '˝', alias: 'HU_DACU', title: '◌̋ (dead)' },
  'ALGR(KC_MINS)': { name: '¨', alias: 'HU_DIAE', title: '◌̈ (dead)' },
  'ALGR(KC_EQL)': { name: '¸', alias: 'HU_CEDL', title: '◌̧ (dead)' },
  // Row 2
  'ALGR(KC_Q)': { name: '\\', alias: 'HU_BSLS', title: '\\' },
  'ALGR(KC_W)': { name: '|', alias: 'HU_PIPE', title: '|' },
  'ALGR(KC_E)': { name: 'Ä', alias: 'HU_CADI', title: 'Ä' },
  'ALGR(KC_U)': { name: '€', alias: 'HU_EURO', title: '€' },
  'ALGR(KC_LBRC)': { name: '÷', alias: 'HU_DIV', title: '÷' },
  'ALGR(KC_RBRC)': { name: '×', alias: 'HU_MUL', title: '×' },
  // Row 3
  'ALGR(KC_A)': { name: 'ä', alias: 'HU_LADI', title: 'ä' },
  'ALGR(KC_S)': { name: 'đ', alias: 'HU_LDST', title: 'đ' },
  'ALGR(KC_D)': { name: 'Đ', alias: 'HU_CDST', title: 'Đ' },
  'ALGR(KC_F)': { name: '[', alias: 'HU_LBRC', title: '[' },
  'ALGR(KC_G)': { name: ']', alias: 'HU_RBRC', title: ']' },
  'ALGR(KC_K)': { name: 'ł', alias: 'HU_LLST', title: 'ł' },
  'ALGR(KC_L)': { name: 'Ł', alias: 'HU_CLST', title: 'Ł' },
  'ALGR(KC_SCLN)': { name: '$', alias: 'HU_DLR', title: '$' },
  'ALGR(KC_QUOT)': { name: 'ß', alias: 'HU_SS', title: 'ß' },
  'ALGR(KC_NUHS)': { name: '¤', alias: 'HU_CURR', title: '¤' },
  // Row 4
  'ALGR(KC_NUBS)': { name: '<', alias: 'HU_LABK', title: '<' },
  'ALGR(KC_Z)': { name: '>', alias: 'HU_RABK', title: '>' },
  'ALGR(KC_X)': { name: '#', alias: 'HU_HASH', title: '#' },
  'ALGR(KC_C)': { name: '&', alias: 'HU_AMPR', title: '&' },
  'ALGR(KC_V)': { name: '@', alias: 'HU_AT', title: '@' },
  'ALGR(KC_B)': { name: '{', alias: 'HU_LCBR', title: '{' },
  'ALGR(KC_N)': { name: '}', alias: 'HU_RCBR', title: '}' },
  'ALGR(KC_COMM)': { name: ';', alias: 'HU_SCLN', title: ';' },
  'ALGR(KC_SLSH)': { name: '*', alias: 'HU_ASTR', title: '*' },

  /* Other keys */
  KC_BSLS: { name: 'Ű', title: 'Ű' },
  'S(KC_BSLS)': { name: 'Ű', title: 'Ű' },
  KC_RPRN: { name: 'Ö', alias: 'S(HU_ODIA)', title: 'Ö' },
  KC_UNDS: { name: 'Ü', alias: 'S(HU_UDIA)', title: 'Ü' },
  KC_PLUS: { name: 'Ó', alias: 'S(HU_OACU)', title: 'Ó' },
  KC_LCBR: { name: 'Ő', alias: 'S(HU_ODAC)', title: 'Ő' },
  KC_RCBR: { name: 'Ú', alias: 'S(HU_UACU)', title: 'Ú' },
  KC_COLN: { name: 'É', alias: 'S(HU_EACU)', title: 'É' },
  KC_PIPE: { name: 'Ű', alias: 'HU_UDAC', title: 'Ű' },
  KC_DQUO: { name: 'Á', alias: 'S(HU_AACU)', title: 'Á' },

  SC_LSPO: { name: 'LS / )', title: 'Left Shift when held, ) when tapped' },
  SC_RSPC: { name: 'RS / Ö', title: 'Right Shift when held, Ö when tapped' },
  SC_LCPO: { name: 'LC / )', title: 'Left Control when held, ) when tapped' },
  SC_RCPC: { name: 'RC / Ö', title: 'Right Control when held, Ö when tapped' },
  SC_LAPO: { name: 'LA / )', title: 'Left Alt when held, ) when tapped' },
  SC_RAPC: { name: 'RA / Ö', title: 'Right Alt when held, Ö when tapped' },

  QK_GESC: {
    name: '0/§\nEsc',
    title: 'Esc normally, but 0 when GUI is active or § when Shift is active'
  }
};
