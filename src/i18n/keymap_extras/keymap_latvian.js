/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ [ │ ] │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ ; │ ' │ \ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ \ │ Z │ X │ C │ V │ B │ N │ M │ , │ . │ / │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '~\n`', alias: 'LV_GRV', title: '` and ~' },
  KC_1: { name: '!\n1', alias: 'LV_1', title: '1 and !' },
  KC_2: { name: '@\n2', alias: 'LV_2', title: '2 and @' },
  KC_3: { name: '#\n3', alias: 'LV_3', title: '3 and #' },
  KC_4: { name: '$\n4', alias: 'LV_4', title: '4 and $' },
  KC_5: { name: '%\n5', alias: 'LV_5', title: '5 and %' },
  KC_6: { name: '^\n6', alias: 'LV_6', title: '6 and ^' },
  KC_7: { name: '&\n7', alias: 'LV_7', title: '7 and &' },
  KC_8: { name: '*\n8', alias: 'LV_8', title: '8 and *' },
  KC_9: { name: '(\n9', alias: 'LV_9', title: '9 and (' },
  KC_0: { name: ')\n0', alias: 'LV_0', title: '0 and )' },
  KC_MINS: { name: '_\n-', alias: 'LV_MINS', title: '- and _' },
  KC_EQL: { name: '+\n=', alias: 'LV_EQL', title: '= and +' },
  // Row 2
  KC_Q: { name: 'Q', alias: 'LV_Q', title: 'q and Q' },
  KC_W: { name: 'W', alias: 'LV_W', title: 'w and W' },
  KC_E: { name: 'E', alias: 'LV_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'LV_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'LV_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'LV_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'LV_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'LV_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'LV_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'LV_P', title: 'p and P' },
  KC_LBRC: { name: '{\n[', alias: 'LV_LBRC', title: '[ and {' },
  KC_RBRC: { name: '}\n]', alias: 'LV_RBRC', title: '] and }' },
  // Row 3
  KC_A: { name: 'A', alias: 'LV_A', title: 'a and A' },
  KC_S: { name: 'S', alias: 'LV_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'LV_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'LV_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'LV_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'LV_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'LV_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'LV_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'LV_L', title: 'l and L' },
  KC_SCLN: { name: ':\n;', alias: 'LV_SCLN', title: '; and :' },
  KC_QUOT: {
    name: '"\n\'',
    alias: 'LV_QUOT',
    title: '\' (dead) and " (dead)'
  },
  KC_NUHS: { name: '|\n\\', alias: 'LV_BSLS', title: '\\ and |' },
  // Row 4
  KC_NUBS: { name: '\\', alias: 'LV_NUBS', title: '\\' },
  KC_Z: { name: 'Z', alias: 'LV_Z', title: 'z and Z' },
  KC_X: { name: 'X', alias: 'LV_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'LV_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'LV_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'LV_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'LV_N', title: 'n and N' },
  KC_M: { name: 'M', alias: 'LV_M', title: 'm and M' },
  KC_COMM: { name: '<\n,', alias: 'LV_COMM', title: ', and <' },
  KC_DOT: { name: '>\n.', alias: 'LV_DOT', title: '. and >' },
  KC_SLSH: { name: '?\n/', alias: 'LV_SLSH', title: '/ and ?' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ~ │ ! │ @ │ # │ $ │ % │ ^ │ & │ * │ ( │ ) │ _ │ + │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ { │ } │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │ : │ " │ | │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │   │   │   │   │ < │ > │ ? │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '~', alias: 'LV_TILD', title: '~' },
  KC_TILD: { name: '~', alias: 'LV_TILD', title: '~' },
  'S(KC_1)': { name: '!', alias: 'LV_EXLM', title: '!' },
  KC_EXLM: { name: '!', alias: 'LV_EXLM', title: '!' },
  'S(KC_2)': { name: '@', alias: 'LV_AT', title: '@' },
  KC_AT: { name: '@', alias: 'LV_AT', title: '@' },
  'S(KC_3)': { name: '#', alias: 'LV_HASH', title: '#' },
  KC_HASH: { name: '#', alias: 'LV_HASH', title: '#' },
  'S(KC_4)': { name: '$', alias: 'LV_DLR', title: '$' },
  KC_DLR: { name: '$', alias: 'LV_DLR', title: '$' },
  'S(KC_5)': { name: '%', alias: 'LV_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'LV_PERC', title: '%' },
  'S(KC_6)': { name: '^', alias: 'LV_CIRC', title: '^' },
  KC_CIRC: { name: '^', alias: 'LV_CIRC', title: '^' },
  'S(KC_7)': { name: '&', alias: 'LV_AMPR', title: '&' },
  KC_AMPR: { name: '&', alias: 'LV_AMPR', title: '&' },
  'S(KC_8)': { name: '*', alias: 'LV_ASTR', title: '*' },
  KC_ASTR: { name: '*', alias: 'LV_ASTR', title: '*' },
  'S(KC_9)': { name: '(', alias: 'LV_LPRN', title: '(' },
  KC_LPRN: { name: '(', alias: 'LV_LPRN', title: '(' },
  'S(KC_0)': { name: ')', alias: 'LV_RPRN', title: ')' },
  KC_RPRN: { name: ')', alias: 'LV_RPRN', title: ')' },
  'S(KC_MINS)': { name: '_', alias: 'LV_UNDS', title: '_' },
  KC_UNDS: { name: '_', alias: 'LV_UNDS', title: '_' },
  'S(KC_EQL)': { name: '+', alias: 'LV_PLUS', title: '+' },
  KC_PLUS: { name: '+', alias: 'LV_PLUS', title: '+' },
  // Row 2
  'S(KC_LBRC)': { name: '{', alias: 'LV_LCBR', title: '{' },
  KC_LCBR: { name: '{', alias: 'LV_LCBR', title: '{' },
  'S(KC_RBRC)': { name: '}', alias: 'LV_RCBR', title: '}' },
  KC_RCBR: { name: '}', alias: 'LV_RCBR', title: '}' },
  // Row 3
  'S(KC_SCLN)': { name: ':', alias: 'LV_COLN', title: ':' },
  KC_COLN: { name: ':', alias: 'LV_COLN', title: ':' },
  'S(KC_QUOT)': { name: '"', alias: 'LV_DQUO', title: '" (dead)' },
  KC_DQUO: { name: '"', alias: 'LV_DQUO', title: '" (dead)' },
  'S(KC_NUHS)': { name: '|', alias: 'LV_PIPE', title: '|' },
  // Row 4
  'S(KC_COMM)': { name: '<', alias: 'LV_LABK', title: '<' },
  KC_LT: { name: '<', alias: 'LV_LABK', title: '<' },
  'S(KC_DOT)': { name: '>', alias: 'LV_RABK', title: '>' },
  KC_GT: { name: '>', alias: 'LV_RABK', title: '>' },
  'S(KC_SLSH)': { name: '?', alias: 'LV_QUES', title: '?' },
  KC_QUES: { name: '?', alias: 'LV_QUES', title: '?' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ - │   │ « │ » │ € │   │ ’ │   │   │   │   │ – │   │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │ Ē │ Ŗ │   │   │ Ū │ Ī │ Ō │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Ā │ Š │   │   │ Ģ │   │   │ Ķ │ Ļ │   │ ´ │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │ Ž │   │ Č │   │   │ Ņ │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_GRV)': { name: 'SHYP', alias: 'LV_SHYP', title: 'Soft hyphen' },
  'ALGR(KC_1)': {
    name: 'NBSP',
    alias: 'LV_NBSP',
    title: 'Non-breaking space'
  },
  'ALGR(KC_2)': { name: '«', alias: 'LV_LDAQ', title: '«' },
  'ALGR(KC_3)': { name: '»', alias: 'LV_RDAQ', title: '»' },
  'ALGR(KC_4)': { name: '€', alias: 'LV_EURO', title: '€' },
  'ALGR(KC_6)': { name: '’', alias: 'LV_RSQU', title: '’' },
  'ALGR(KC_MINS)': { name: '–', alias: 'LV_NDSH', title: '–' },
  // Row 2
  'ALGR(KC_E)': { name: 'Ē', alias: 'LV_EMAC', title: 'Ē' },
  'ALGR(KC_R)': { name: 'Ŗ', alias: 'LV_RCED', title: 'Ŗ' },
  'ALGR(KC_U)': { name: 'Ū', alias: 'LV_UMAC', title: 'Ū' },
  'ALGR(KC_I)': { name: 'Ī', alias: 'LV_IMAC', title: 'Ī' },
  'ALGR(KC_O)': { name: 'Ō', alias: 'LV_OMAC', title: 'Ō' },
  // Row 3
  'ALGR(KC_A)': { name: 'Ā', alias: 'LV_AMAC', title: 'Ā' },
  'ALGR(KC_S)': { name: 'Š', alias: 'LV_SCAR', title: 'Š' },
  'ALGR(KC_G)': { name: 'Ģ', alias: 'LV_GCED', title: 'Ģ' },
  'ALGR(KC_K)': { name: 'Ķ', alias: 'LV_KCED', title: 'Ķ' },
  'ALGR(KC_L)': { name: 'Ļ', alias: 'LV_LCED', title: 'Ļ' },
  'ALGR(KC_QUOT)': { name: '´', alias: 'LV_ACUT', title: '◌́ (dead)' },
  // Row 4
  'ALGR(KC_Z)': { name: 'Ž', alias: 'LV_ZCAR', title: 'Ž' },
  'ALGR(KC_C)': { name: 'Č', alias: 'LV_CCAR', title: 'Č' },
  'ALGR(KC_N)': { name: 'Ņ', alias: 'LV_NCED', title: 'Ņ' },

  /* Shift+AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │   │   │   │ § │ ° │   │ ± │ × │   │   │ — │   │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │ ¨ │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │   │   │   │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(ALGR(KC_4))': { name: '§', alias: 'LV_SECT', title: '§' },
  'S(ALGR(KC_5))': { name: '°', alias: 'LV_DEG', title: '°' },
  'S(ALGR(KC_7))': { name: '±', alias: 'LV_PLMN', title: '±' },
  'S(ALGR(KC_8))': { name: '×', alias: 'LV_MUL', title: '×' },
  'S(ALGR(KC_MINS))': { name: '—', alias: 'LV_MDSH', title: '—' },
  // Row 3
  'S(ALGR(KC_QUOT))': { name: '¨', alias: 'LV_DIAE', title: '◌̈ (dead)' },

  /* Other keys */
  KC_BSLS: { name: '|\n\\', title: '\\ and |' },
  'S(KC_BSLS)': { name: '|', title: '|' },
  KC_PIPE: { name: '|', alias: 'LV_PIPE', title: '|' },

  SC_LSPO: { name: 'LS / (', title: 'Left Shift when held, ( when tapped' },
  SC_RSPC: { name: 'RS / )', title: 'Right Shift when held, ) when tapped' },
  SC_LCPO: { name: 'LC / (', title: 'Left Control when held, ( when tapped' },
  SC_RCPC: { name: 'RC / )', title: 'Right Control when held, ) when tapped' },
  SC_LAPO: { name: 'LA / (', title: 'Left Alt when held, ( when tapped' },
  SC_RAPC: { name: 'RA / )', title: 'Right Alt when held, ) when tapped' },

  QK_GESC: {
    name: '`/~\nEsc',
    title: 'Esc normally, but ` when GUI is active or ~ when Shift is active'
  }
};
