/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ ; │ ς │ Ε │ Ρ │ Τ │ Υ │ Θ │ Ι │ Ο │ Π │ [ │ ] │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Α │ Σ │ Δ │ Φ │ Γ │ Η │ Ξ │ Κ │ Λ │ ΄ │ ' │ \ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │ Ζ │ Χ │ Ψ │ Ω │ Β │ Ν │ Μ │ , │ . │ / │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '~\n`', alias: 'GR_GRV', title: '` and ~' },
  KC_1: { name: '!\n1', alias: 'GR_1', title: '1 and !' },
  KC_2: { name: '@\n2', alias: 'GR_2', title: '2 and @' },
  KC_3: { name: '#\n3', alias: 'GR_3', title: '3 and #' },
  KC_4: { name: '$\n4', alias: 'GR_4', title: '4 and $' },
  KC_5: { name: '%\n5', alias: 'GR_5', title: '5 and %' },
  KC_6: { name: '^\n6', alias: 'GR_6', title: '6 and ^' },
  KC_7: { name: '&\n7', alias: 'GR_7', title: '7 and &' },
  KC_8: { name: '*\n8', alias: 'GR_8', title: '8 and *' },
  KC_9: { name: '(\n9', alias: 'GR_9', title: '9 and (' },
  KC_0: { name: ')\n0', alias: 'GR_0', title: '0 and )' },
  KC_MINS: { name: '_\n-', alias: 'GR_MINS', title: '- and _' },
  KC_EQL: { name: '+\n=', alias: 'GR_EQL', title: '= and +' },
  // Row 2
  KC_Q: { name: ':\n;', alias: 'GR_SCLN', title: '; and :' },
  KC_W: { name: '΅\nς', alias: 'GR_FSIG', title: 'ς and ◌̈́ (dead)' },
  KC_E: { name: 'Ε', alias: 'GR_EPSL', title: 'ε and Ε' },
  KC_R: { name: 'Ρ', alias: 'GR_RHO', title: 'ρ and Ρ' },
  KC_T: { name: 'Τ', alias: 'GR_TAU', title: 'τ and Τ' },
  KC_Y: { name: 'Υ', alias: 'GR_UPSL', title: 'υ and Υ' },
  KC_U: { name: 'Θ', alias: 'GR_THET', title: 'θ and Θ' },
  KC_I: { name: 'Ι', alias: 'GR_IOTA', title: 'ι and Ι' },
  KC_O: { name: 'Ο', alias: 'GR_OMCR', title: 'ο and Ο' },
  KC_P: { name: 'Π', alias: 'GR_PI', title: 'π and Π' },
  KC_LBRC: { name: '{\n[', alias: 'GR_LBRC', title: '[ and {' },
  KC_RBRC: { name: '}\n]', alias: 'GR_RBRC', title: '] and }' },
  // Row 3
  KC_A: { name: 'Α', alias: 'GR_ALPH', title: 'α and Α' },
  KC_S: { name: 'Σ', alias: 'GR_SIGM', title: 'σ and Σ' },
  KC_D: { name: 'Δ', alias: 'GR_DELT', title: 'δ and Δ' },
  KC_F: { name: 'Φ', alias: 'GR_PHI', title: 'φ and Φ' },
  KC_G: { name: 'Γ', alias: 'GR_GAMM', title: 'γ and Γ' },
  KC_H: { name: 'Η', alias: 'GR_ETA', title: 'η and Η' },
  KC_J: { name: 'Ξ', alias: 'GR_XI', title: 'ξ and Ξ' },
  KC_K: { name: 'Κ', alias: 'GR_KAPP', title: 'κ and Κ' },
  KC_L: { name: 'Λ', alias: 'GR_LAMB', title: 'λ and Λ' },
  KC_SCLN: { name: '¨\n΄', alias: 'GR_TONS', title: '΄ (dead) and ◌̈ (dead)' },
  KC_QUOT: { name: '"\n\'', alias: 'GR_QUOT', title: '\' and "' },
  KC_NUHS: { name: '|\n\\', alias: 'GR_BSLS', title: '\\ and |' },
  // Row 4
  KC_Z: { name: 'Ζ', alias: 'GR_ZETA', title: 'ζ and Ζ' },
  KC_X: { name: 'Χ', alias: 'GR_CHI', title: 'χ and Χ' },
  KC_C: { name: 'Ψ', alias: 'GR_PSI', title: 'ψ and Ψ' },
  KC_V: { name: 'Ω', alias: 'GR_OMEG', title: 'ω and Ω' },
  KC_B: { name: 'Β', alias: 'GR_BETA', title: 'β and Β' },
  KC_N: { name: 'Ν', alias: 'GR_NU', title: 'ν and Ν' },
  KC_M: { name: 'Μ', alias: 'GR_MU', title: 'μ and Μ' },
  KC_COMM: { name: '<\n,', alias: 'GR_COMM', title: ', and <' },
  KC_DOT: { name: '>\n.', alias: 'GR_DOT', title: '. and >' },
  KC_SLSH: { name: '?\n/', alias: 'GR_SLSH', title: '/ and ?' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ~ │ ! │ @ │ # │ $ │ % │ ^ │ & │ * │ ( │ ) │ _ │ + │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ : │ ΅ │   │   │   │   │   │   │   │   │ { │ } │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │ ¨ │ " │ | │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │   │   │   │   │ < │ > │ ? │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '~', alias: 'GR_TILD', title: '~' },
  KC_TILD: { name: '~', alias: 'GR_TILD', title: '~' },
  'S(KC_1)': { name: '!', alias: 'GR_EXLM', title: '!' },
  KC_EXLM: { name: '!', alias: 'GR_EXLM', title: '!' },
  'S(KC_2)': { name: '@', alias: 'GR_AT', title: '@' },
  KC_AT: { name: '@', alias: 'GR_AT', title: '@' },
  'S(KC_3)': { name: '#', alias: 'GR_HASH', title: '#' },
  KC_HASH: { name: '#', alias: 'GR_HASH', title: '#' },
  'S(KC_4)': { name: '$', alias: 'GR_DLR', title: '$' },
  KC_DLR: { name: '$', alias: 'GR_DLR', title: '$' },
  'S(KC_5)': { name: '%', alias: 'GR_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'GR_PERC', title: '%' },
  'S(KC_6)': { name: '^', alias: 'GR_CIRC', title: '^' },
  KC_CIRC: { name: '^', alias: 'GR_CIRC', title: '^' },
  'S(KC_7)': { name: '&', alias: 'GR_AMPR', title: '&' },
  KC_AMPR: { name: '&', alias: 'GR_AMPR', title: '&' },
  'S(KC_8)': { name: '*', alias: 'GR_ASTR', title: '*' },
  KC_ASTR: { name: '*', alias: 'GR_ASTR', title: '*' },
  'S(KC_9)': { name: '(', alias: 'GR_LPRN', title: '(' },
  KC_LPRN: { name: '(', alias: 'GR_LPRN', title: '(' },
  'S(KC_0)': { name: ')', alias: 'GR_RPRN', title: ')' },
  KC_RPRN: { name: ')', alias: 'GR_RPRN', title: ')' },
  'S(KC_MINS)': { name: '_', alias: 'GR_UNDS', title: '_' },
  KC_UNDS: { name: '_', alias: 'GR_UNDS', title: '_' },
  'S(KC_EQL)': { name: '+', alias: 'GR_PLUS', title: '+' },
  KC_PLUS: { name: '+', alias: 'GR_PLUS', title: '+' },
  // Row 2
  'S(KC_Q)': { name: ':', alias: 'GR_COLN', title: ':' },
  'S(KC_W)': { name: '΅', alias: 'GR_DIAT', title: '◌̈́ (dead)' },
  'S(KC_LBRC)': { name: '{', alias: 'GR_LCBR', title: '{' },
  KC_LCBR: { name: '{', alias: 'GR_LCBR', title: '{' },
  'S(KC_RBRC)': { name: '}', alias: 'GR_RCBR', title: '}' },
  KC_RCBR: { name: '}', alias: 'GR_RCBR', title: '}' },
  // Row 3
  'S(KC_SCLN)': { name: '¨', alias: 'GR_DIAE', title: '◌̈ (dead)' },
  KC_COLN: { name: '¨', alias: 'GR_DIAE', title: '◌̈ (dead)' },
  'S(KC_QUOT)': { name: '"', alias: 'GR_DQUO', title: '"' },
  KC_DQUO: { name: '"', alias: 'GR_DQUO', title: '"' },
  'S(KC_NUHS)': { name: '|', alias: 'GR_PIPE', title: '|' },
  // Row 4
  'S(KC_COMM)': { name: '<', alias: 'GR_LABK', title: '<' },
  KC_LT: { name: '<', alias: 'GR_LABK', title: '<' },
  'S(KC_DOT)': { name: '>', alias: 'GR_RABK', title: '>' },
  KC_GT: { name: '>', alias: 'GR_RABK', title: '>' },
  'S(KC_SLSH)': { name: '?', alias: 'GR_QUES', title: '?' },
  KC_QUES: { name: '?', alias: 'GR_QUES', title: '?' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │   │ ² │ ³ │ £ │ § │ ¶ │   │ ¤ │ ¦ │ ° │ ± │ ½ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │ € │ ® │   │ ¥ │   │   │   │   │ « │ » │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │   │ ¬ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │ © │   │   │   │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_2)': { name: '²', alias: 'GR_SUP2', title: '²' },
  'ALGR(KC_3)': { name: '³', alias: 'GR_SUP3', title: '³' },
  'ALGR(KC_4)': { name: '£', alias: 'GR_PND', title: '£' },
  'ALGR(KC_5)': { name: '§', alias: 'GR_SECT', title: '§' },
  'ALGR(KC_6)': { name: '¶', alias: 'GR_PILC', title: '¶' },
  'ALGR(KC_8)': { name: '¤', alias: 'GR_CURR', title: '¤' },
  'ALGR(KC_9)': { name: '¦', alias: 'GR_BRKP', title: '¦' },
  'ALGR(KC_0)': { name: '°', alias: 'GR_DEG', title: '°' },
  'ALGR(KC_MINS)': { name: '±', alias: 'GR_PLMN', title: '±' },
  'ALGR(KC_EQL)': { name: '½', alias: 'GR_HALF', title: '½' },
  // Row 2
  'ALGR(KC_E)': { name: '€', alias: 'GR_EURO', title: '€' },
  'ALGR(KC_R)': { name: '®', alias: 'GR_REGD', title: '®' },
  'ALGR(KC_Y)': { name: '¥', alias: 'GR_YEN', title: '¥' },
  'ALGR(KC_LBRC)': { name: '«', alias: 'GR_LDAQ', title: '«' },
  'ALGR(KC_RBRC)': { name: '»', alias: 'GR_RDAQ', title: '»' },
  // Row 3
  'ALGR(KC_NUHS)': { name: '¬', alias: 'GR_NOT', title: '¬' },
  // Row 4
  'ALGR(KC_C)': { name: '©', alias: 'GR_COPY', title: '©' },

  /* Other keys */
  KC_BSLS: { name: '|\n\\', title: '\\ and |' },
  'S(KC_BSLS)': { name: '|', title: '|' },
  KC_NUBS: { name: '|\n\\', title: '\\ and |' },
  'S(KC_NUBS)': { name: '|', title: '|' },
  KC_PIPE: { name: '|', alias: 'GR_PIPE', title: '|' },

  SC_LSPO: { name: 'LS / (', title: 'Left Shift when held, ( when tapped' },
  SC_RSPC: { name: 'RS / )', title: 'Right Shift when held, ) when tapped' },
  SC_LCPO: { name: 'LC / (', title: 'Left Control when held, ( when tapped' },
  SC_RCPC: { name: 'RC / )', title: 'Right Control when held, ) when tapped' },
  SC_LAPO: { name: 'LA / (', title: 'Left Alt when held, ( when tapped' },
  SC_RAPC: { name: 'RA / )', title: 'Right Alt when held, ) when tapped' },

  QK_GESC: {
    name: '`/~\nEsc',
    title: 'Esc normally, but ` when GUI is active or ~ when Shift is active'
  }
};
