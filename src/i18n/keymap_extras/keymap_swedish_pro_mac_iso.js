/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
   * │ § │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ + │ ´ │     │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
   * │     │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │ Å │ ¨ │   │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
   * │      │ A │ S │ D │ F │ G │ H │ J │ K │ L │ Ö │ Ä │ ' │  │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
   * │    │ < │ Z │ X │ C │ V │ B │ N │ M │ , │ . │ - │        │
   * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
   * │     │    │     │                       │     │    │     │
   * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
   */
  // Row 1
  KC_GRV: { name: '°\n§', alias: 'SE_SECT', title: '§ and °' },
  KC_1: { name: '!\n1', alias: 'SE_1', title: '1 and !' },
  KC_2: { name: '"\n2', alias: 'SE_2', title: '2 and "' },
  KC_3: { name: '#\n3', alias: 'SE_3', title: '3 and #' },
  KC_4: { name: '€\n4', alias: 'SE_4', title: '4 and €' },
  KC_5: { name: '%\n5', alias: 'SE_5', title: '5 and %' },
  KC_6: { name: '&\n6', alias: 'SE_6', title: '6 and &' },
  KC_7: { name: '/\n7', alias: 'SE_7', title: '7 and /' },
  KC_8: { name: '(\n8', alias: 'SE_8', title: '8 and (' },
  KC_9: { name: ')\n9', alias: 'SE_9', title: '9 and )' },
  KC_0: { name: '=\n0', alias: 'SE_0', title: '0 and =' },
  KC_MINS: { name: '?\n+', alias: 'SE_PLUS', title: '+ and ?' },
  KC_EQL: { name: '`\n´', alias: 'SE_ACUT', title: '◌́ (dead) and `' },
  // Row 2
  KC_Q: { name: 'Q', alias: 'SE_Q', title: 'q and Q' },
  KC_W: { name: 'W', alias: 'SE_W', title: 'w and W' },
  KC_E: { name: 'E', alias: 'SE_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'SE_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'SE_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'SE_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'SE_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'SE_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'SE_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'SE_P', title: 'p and P' },
  KC_LBRC: { name: 'Å', alias: 'SE_ARNG', title: 'å and Å' },
  KC_RBRC: { name: '^\n¨', alias: 'SE_DIAE', title: '◌̈ (dead) and ◌̂ (dead)' },
  // Row 3
  KC_A: { name: 'A', alias: 'SE_A', title: 'a and A' },
  KC_S: { name: 'S', alias: 'SE_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'SE_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'SE_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'SE_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'SE_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'SE_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'SE_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'SE_L', title: 'l and L' },
  KC_SCLN: { name: 'Ö', alias: 'SE_ODIA', title: 'ö and Ö' },
  KC_QUOT: { name: 'Ä', alias: 'SE_ADIA', title: 'ä and Ä' },
  KC_NUHS: { name: "*\n'", alias: 'SE_QUOT', title: "' and *" },
  // Row 4
  KC_NUBS: { name: '>\n<', alias: 'SE_LABK', title: '< and >' },
  KC_Z: { name: 'Z', alias: 'SE_Z', title: 'z and Z' },
  KC_X: { name: 'X', alias: 'SE_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'SE_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'SE_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'SE_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'SE_N', title: 'n and N' },
  KC_M: { name: 'M', alias: 'SE_M', title: 'm and M' },
  KC_COMM: { name: ';\n,', alias: 'SE_COMM', title: ', and ;' },
  KC_DOT: { name: ':\n.', alias: 'SE_DOT', title: '. and :' },
  KC_SLSH: { name: '_\n-', alias: 'SE_MINS', title: '- and _' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
   * │ ° │ ! │ " │ # │ € │ % │ & │ / │ ( │ ) │ = │ ? │ ` │     │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
   * │     │   │   │   │   │   │   │   │   │   │   │   │ ^ │   │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
   * │      │   │   │   │   │   │   │   │   │   │   │   │ * │  │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
   * │    │ > │   │   │   │   │   │   │   │ ; │ : │ _ │        │
   * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
   * │     │    │     │                       │     │    │     │
   * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '°', alias: 'SE_DEG', title: '°' },
  KC_TILD: { name: '°', alias: 'SE_DEG', title: '°' },
  'S(KC_1)': { name: '!', alias: 'SE_EXLM', title: '!' },
  KC_EXLM: { name: '!', alias: 'SE_EXLM', title: '!' },
  'S(KC_2)': { name: '"', alias: 'SE_DQUO', title: '"' },
  KC_AT: { name: '"', alias: 'SE_DQUO', title: '"' },
  'S(KC_3)': { name: '#', alias: 'SE_HASH', title: '#' },
  KC_HASH: { name: '#', alias: 'SE_HASH', title: '#' },
  'S(KC_4)': { name: '€', alias: 'SE_EURO', title: '€' },
  KC_DLR: { name: '€', alias: 'SE_EURO', title: '€' },
  'S(KC_5)': { name: '%', alias: 'SE_PERC', title: '%' },
  KC_PERC: { name: '%', alias: 'SE_PERC', title: '%' },
  'S(KC_6)': { name: '&', alias: 'SE_AMPR', title: '&' },
  KC_CIRC: { name: '&', alias: 'SE_AMPR', title: '&' },
  'S(KC_7)': { name: '/', alias: 'SE_SLSH', title: '/' },
  KC_AMPR: { name: '/', alias: 'SE_SLSH', title: '/' },
  'S(KC_8)': { name: '(', alias: 'SE_LPRN', title: '(' },
  KC_ASTR: { name: '(', alias: 'SE_LPRN', title: '(' },
  'S(KC_9)': { name: ')', alias: 'SE_RPRN', title: ')' },
  KC_LPRN: { name: ')', alias: 'SE_RPRN', title: ')' },
  'S(KC_0)': { name: '=', alias: 'SE_EQL', title: '=' },
  KC_RPRN: { name: '=', alias: 'SE_EQL', title: '=' },
  'S(KC_MINS)': { name: '?', alias: 'SE_QUES', title: '?' },
  KC_UNDS: { name: '?', alias: 'SE_QUES', title: '?' },
  'S(KC_EQL)': { name: '`', alias: 'SE_GRV', title: '`' },
  KC_PLUS: { name: '`', alias: 'SE_GRV', title: '`' },
  // Row 2
  'S(KC_RBRC)': { name: '^', alias: 'SE_CIRC', title: '◌̂ (dead)' },
  KC_RCBR: { name: '^', alias: 'SE_CIRC', title: '◌̂ (dead)' },
  // Row 3
  'S(KC_NUHS)': { name: '*', alias: 'SE_ASTR', title: '*' },
  // Row 4
  'S(KC_NUBS)': { name: '>', alias: 'SE_RABK', title: '>' },
  'S(KC_COMM)': { name: ';', alias: 'SE_SCLN', title: ';' },
  KC_LT: { name: ';', alias: 'SE_SCLN', title: ';' },
  'S(KC_DOT)': { name: ':', alias: 'SE_COLN', title: ':' },
  KC_GT: { name: ':', alias: 'SE_COLN', title: ':' },
  'S(KC_SLSH)': { name: '_', alias: 'SE_UNDS', title: '_' },
  KC_QUES: { name: '_', alias: 'SE_UNDS', title: '_' },

  /* Alted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
   * │ ¶ │ © │ @ │ £ │ $ │ ∞ │   │ | │ [ │ ] │ ≈ │ ± │   │     │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
   * │     │ • │ Ω │ É │ ® │ † │ µ │ Ü │ ı │ Œ │ π │ ˙ │ ~ │   │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
   * │      │  │ ß │ ∂ │ ƒ │ ¸ │ ˛ │ √ │ ª │ ﬁ │ Ø │ Æ │ ™ │  │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
   * │    │ ≤ │ ÷ │   │ Ç │ ‹ │ › │ ‘ │ ’ │ ‚ │ … │ – │        │
   * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
   * │     │    │     │                       │     │    │     │
   * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
   */
  // Row 1
  'A(KC_GRV)': { name: '¶', alias: 'SE_PILC', title: '¶' },
  'A(KC_1)': { name: '©', alias: 'SE_COPY', title: '©' },
  'A(KC_2)': { name: '@', alias: 'SE_AT', title: '@' },
  'A(KC_3)': { name: '£', alias: 'SE_PND', title: '£' },
  'A(KC_4)': { name: '$', alias: 'SE_DLR', title: '$' },
  'A(KC_5)': { name: '∞', alias: 'SE_INFN', title: '∞' },
  'A(KC_7)': { name: '|', alias: 'SE_PIPE', title: '|' },
  'A(KC_8)': { name: '[', alias: 'SE_LBRC', title: '[' },
  'A(KC_9)': { name: ']', alias: 'SE_RBRC', title: ']' },
  'A(KC_0)': { name: '≈', alias: 'SE_AEQL', title: '≈' },
  'A(KC_MINS)': { name: '±', alias: 'SE_PLMN', title: '±' },
  // Row 2
  'A(KC_Q)': { name: '•', alias: 'SE_BULT', title: '•' },
  'A(KC_W)': { name: 'Ω', alias: 'SE_OMEG', title: 'Ω' },
  'A(KC_E)': { name: 'É', alias: 'SE_EACU', title: 'É' },
  'A(KC_R)': { name: '®', alias: 'SE_REGD', title: '®' },
  'A(KC_T)': { name: '†', alias: 'SE_DAGG', title: '†' },
  'A(KC_Y)': { name: 'µ', alias: 'SE_MICR', title: 'µ' },
  'A(KC_U)': { name: 'Ü', alias: 'SE_UDIA', title: 'Ü' },
  'A(KC_I)': { name: 'ı', alias: 'SE_DLSI', title: 'ı' },
  'A(KC_O)': { name: 'Œ', alias: 'SE_OE', title: 'Œ' },
  'A(KC_P)': { name: 'π', alias: 'SE_PI', title: 'π' },
  'A(KC_LBRC)': { name: '˙', alias: 'SE_DOTA', title: '˙' },
  'A(KC_RBRC)': { name: '~', alias: 'SE_TILD', title: '◌̃ (dead)' },
  // Row 3
  'A(KC_A)': { name: '', alias: 'SE_APPL', title: 'Apple logo' },
  'A(KC_S)': { name: 'ß', alias: 'SE_SS', title: 'ß' },
  'A(KC_D)': { name: '∂', alias: 'SE_PDIF', title: '∂' },
  'A(KC_F)': { name: 'ƒ', alias: 'SE_FHK', title: 'ƒ' },
  'A(KC_G)': { name: '¸', alias: 'SE_CEDL', title: '¸' },
  'A(KC_H)': { name: '˛', alias: 'SE_OGON', title: '˛' },
  'A(KC_J)': { name: '√', alias: 'SE_SQRT', title: '√' },
  'A(KC_K)': { name: 'ª', alias: 'SE_FORD', title: 'ª' },
  'A(KC_L)': { name: 'ﬁ', alias: 'SE_FI', title: 'ﬁ' },
  'A(KC_SCLN)': { name: 'Ø', alias: 'SE_OSTR', title: 'Ø' },
  'A(KC_QUOT)': { name: 'Æ', alias: 'SE_AE', title: 'Æ' },
  'A(KC_NUHS)': { name: '™', alias: 'SE_TM', title: '™' },
  // Row 4
  'A(KC_NUBS)': { name: '≤', alias: 'SE_LTEQ', title: '≤' },
  'A(KC_Z)': { name: '÷', alias: 'SE_DIV', title: '÷' },
  'A(KC_C)': { name: 'Ç', alias: 'SE_CCED', title: 'Ç' },
  'A(KC_V)': { name: '‹', alias: 'SE_LSAQ', title: '‹' },
  'A(KC_B)': { name: '›', alias: 'SE_RSAQ', title: '›' },
  'A(KC_N)': { name: '‘', alias: 'SE_LSQU', title: '‘' },
  'A(KC_M)': { name: '’', alias: 'SE_RSQU', title: '’' },
  'A(KC_COMM)': { name: '‚', alias: 'SE_SLQU', title: '‚' },
  'A(KC_DOT)': { name: '…', alias: 'SE_ELLP', title: '…' },
  'A(KC_SLSH)': { name: '–', alias: 'SE_NDSH', title: '–' },

  /* Shift+Alted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─────┐
   * │   │ ¡ │ ” │ ¥ │ ¢ │ ‰ │   │ \ │ { │ } │ ≠ │ ¿ │   │     │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬───┤
   * │     │   │ ˝ │   │   │ ‡ │ ˜ │   │ ˆ │   │ ∏ │ ˚ │   │   │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐  │
   * │      │ ◊ │ ∑ │ ∆ │ ∫ │ ¯ │ ˘ │ ¬ │ º │ ﬂ │   │   │   │  │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴──┤
   * │    │ ≥ │ ⁄ │ ˇ │   │ « │ » │ “ │ ” │ „ │ · │ — │        │
   * ├────┴┬──┴─┬─┴───┼───┴───┴───┴───┴───┴───┼───┴─┬─┴──┬─────┤
   * │     │    │     │                       │     │    │     │
   * └─────┴────┴─────┴───────────────────────┴─────┴────┴─────┘
   */
  // Row 1
  'S(A(KC_1))': { name: '¡', alias: 'SE_IEXL', title: '¡' },
  'S(A(KC_3))': { name: '¥', alias: 'SE_YEN', title: '¥' },
  'S(A(KC_4))': { name: '¢', alias: 'SE_CENT', title: '¢' },
  'S(A(KC_5))': { name: '‰', alias: 'SE_PERM', title: '‰' },
  'S(A(KC_7))': { name: '\\', alias: 'SE_BSLS', title: '\\' },
  'S(A(KC_8))': { name: '{', alias: 'SE_LCBR', title: '{' },
  'S(A(KC_9))': { name: '}', alias: 'SE_RCBR', title: '}' },
  'S(A(KC_0))': { name: '≠', alias: 'SE_NEQL', title: '≠' },
  'S(A(KC_MINS))': { name: '¿', alias: 'SE_IQUE', title: '¿' },
  // Row 2
  'S(A(KC_W))': { name: '˝', alias: 'SE_DACU', title: '˝' },
  'S(A(KC_T))': { name: '‡', alias: 'SE_DDAG', title: '‡' },
  'S(A(KC_Y))': { name: '˜', alias: 'SE_STIL', title: '˜' },
  'S(A(KC_I))': { name: 'ˆ', alias: 'SE_DCIR', title: 'ˆ' },
  'S(A(KC_P))': { name: '∏', alias: 'SE_NARP', title: '∏' },
  'S(A(KC_LBRC))': { name: '˚', alias: 'SE_RNGA', title: '˚' },
  // Row 3
  'S(A(KC_A))': { name: '◊', alias: 'SE_LOZN', title: '◊' },
  'S(A(KC_S))': { name: '∑', alias: 'SE_NARS', title: '∑' },
  'S(A(KC_D))': { name: '∆', alias: 'SE_INCR', title: '∆' },
  'S(A(KC_F))': { name: '∫', alias: 'SE_INTG', title: '∫' },
  'S(A(KC_G))': { name: '¯', alias: 'SE_MACR', title: '¯' },
  'S(A(KC_H))': { name: '˘', alias: 'SE_BREV', title: '˘' },
  'S(A(KC_J))': { name: '¬', alias: 'SE_NOT', title: '¬' },
  'S(A(KC_K))': { name: 'º', alias: 'SE_MORD', title: 'º' },
  'S(A(KC_L))': { name: 'ﬂ', alias: 'SE_FL', title: 'ﬂ' },
  // Row 4
  'S(A(KC_NUBS))': { name: '≥', alias: 'SE_GTEQ', title: '≥' },
  'S(A(KC_Z))': { name: '⁄', alias: 'SE_FRSL', title: '⁄' },
  'S(A(KC_X))': { name: 'ˇ', alias: 'SE_CARN', title: 'ˇ' },
  'S(A(KC_V))': { name: '«', alias: 'SE_LDAQ', title: '«' },
  'S(A(KC_B))': { name: '»', alias: 'SE_RDAQ', title: '»' },
  'S(A(KC_N))': { name: '“', alias: 'SE_LDQU', title: '“' },
  'S(A(KC_M))': { name: '”', alias: 'SE_RDQU', title: '”' },
  'S(A(KC_COMM))': { name: '„', alias: 'SE_DLQU', title: '„' },
  'S(A(KC_DOT))': { name: '·', alias: 'SE_MDDT', title: '·' },
  'S(A(KC_SLSH))': { name: '—', alias: 'SE_MDSH', title: '—' },

  /* Other keys */
  KC_BSLS: { name: "*\n'", title: "' and *" },
  'S(KC_BSLS)': { name: '*', title: '*' },
  KC_LCBR: { name: 'Å', alias: 'S(SE_ARNG)', title: 'Å' },
  KC_COLN: { name: 'Ö', alias: 'S(SE_ODIA)', title: 'Ö' },
  KC_PIPE: { name: '*', alias: 'SE_ASTR', title: '*' },
  KC_DQUO: { name: 'Ä', alias: 'S(SE_ADIA)', title: 'Ä' },

  SC_LSPO: { name: 'LS / )', title: 'Left Shift when held, ) when tapped' },
  SC_RSPC: { name: 'RS / =', title: 'Right Shift when held, = when tapped' },
  SC_LCPO: { name: 'LC / )', title: 'Left Control when held, ) when tapped' },
  SC_RCPC: { name: 'RC / =', title: 'Right Control when held, = when tapped' },
  SC_LAPO: { name: 'LA / )', title: 'Left Alt when held, ) when tapped' },
  SC_RAPC: { name: 'RA / =', title: 'Right Alt when held, = when tapped' },

  QK_GESC: {
    name: '§/°\nEsc',
    title: 'Esc normally, but § when GUI is active or ° when Shift is active'
  }
};
