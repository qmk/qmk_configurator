/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* Dvorak for the French language
 * Version: 2
 *
 * The layout is designed by Francis Leboutte <dvorak-fr@algo.be>
 *
 * Source: https://algo.be/ergo/dvorak-fr.html
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ « │ » │ / │ - │ è │ \ │ ^ │ ( │ ` │ ) │ _ │ [ │ ] │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ : │ ' │ é │ G │ . │ H │ V │ C │ M │ K │ Z │ ¨ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ O │ A │ U │ E │ B │ F │ S │ T │ N │ D │ W │ ~ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ à │ ; │ Q │ , │ I │ Y │ X │ R │ L │ P │ J │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '*\n«', alias: 'DV_LDAQ', title: '« and *' },
  KC_1: { name: '1\n»', alias: 'DV_RDAQ', title: '» and 1' },
  KC_2: { name: '2\n/', alias: 'DV_SLSH', title: '/ and 2' },
  KC_3: { name: '3\n-', alias: 'DV_MINS', title: '- and 3' },
  KC_4: { name: '4\nè', alias: 'DV_EGRV', title: 'è and 4' },
  KC_5: { name: '5\n\\', alias: 'DV_BSLS', title: ' and 5' },
  KC_6: { name: '6\n^', alias: 'DV_CIRC', title: '◌̂ (dead) and 6' },
  KC_7: { name: '7\n(', alias: 'DV_LPRN', title: '( and 7' },
  KC_8: { name: '8\n`', alias: 'DV_GRV', title: '◌̀ (dead) and 8' },
  KC_9: { name: '9\n)', alias: 'DV_RPRN', title: ') and 9' },
  KC_0: { name: '0\n_', alias: 'DV_UNDS', title: '_ and 0' },
  KC_MINS: { name: '+\n[', alias: 'DV_LBRC', title: '[ and +' },
  KC_EQL: { name: '%\n]', alias: 'DV_RBRC', title: '] and %' },
  // Row 2
  KC_Q: { name: '?\n:', alias: 'DV_COLN', title: ': and ?' },
  KC_W: { name: "<\n'", alias: 'DV_QUOT', title: "' and <" },
  KC_E: { name: '>\né', alias: 'DV_EACU', title: 'é and >' },
  KC_R: { name: 'G', alias: 'DV_G', title: 'g and G' },
  KC_T: { name: '!\n.', alias: 'DV_DOT', title: '. and !' },
  KC_Y: { name: 'H', alias: 'DV_H', title: 'h and H' },
  KC_U: { name: 'V', alias: 'DV_V', title: 'v and V' },
  KC_I: { name: 'C', alias: 'DV_C', title: 'c and C' },
  KC_O: { name: 'M', alias: 'DV_M', title: 'm and M' },
  KC_P: { name: 'K', alias: 'DV_K', title: 'k and K' },
  KC_LBRC: { name: 'Z', alias: 'DV_Z', title: 'z and Z' },
  KC_RBRC: { name: '=\n¨', alias: 'DV_DIAE', title: '◌̈ (dead) and =' },
  // Row 3
  KC_A: { name: 'O', alias: 'DV_O', title: 'o and O' },
  KC_S: { name: 'A', alias: 'DV_A', title: 'a and A' },
  KC_D: { name: 'U', alias: 'DV_U', title: 'u and U' },
  KC_F: { name: 'E', alias: 'DV_E', title: 'e and E' },
  KC_G: { name: 'B', alias: 'DV_B', title: 'b and B' },
  KC_H: { name: 'F', alias: 'DV_F', title: 'f and F' },
  KC_J: { name: 'S', alias: 'DV_S', title: 's and S' },
  KC_K: { name: 'T', alias: 'DV_T', title: 't and T' },
  KC_L: { name: 'N', alias: 'DV_N', title: 'n and N' },
  KC_SCLN: { name: 'D', alias: 'DV_D', title: 'd and D' },
  KC_QUOT: { name: 'W', alias: 'DV_W', title: 'w and W' },
  KC_NUHS: { name: '#\n~', alias: 'DV_TILD', title: '◌̃ (dead) and #' },
  // Row 4
  KC_NUBS: { name: 'ç\nà', alias: 'DV_AGRV', title: 'à and ç' },
  KC_Z: { name: '|\n;', alias: 'DV_SCLN', title: '; and |' },
  KC_X: { name: 'Q', alias: 'DV_Q', title: 'q and Q' },
  KC_C: { name: '@\n,', alias: 'DV_COMM', title: ', and @' },
  KC_V: { name: 'I', alias: 'DV_I', title: 'i and I' },
  KC_B: { name: 'Y', alias: 'DV_Y', title: 'y and Y' },
  KC_N: { name: 'X', alias: 'DV_X', title: 'x and X' },
  KC_M: { name: 'R', alias: 'DV_R', title: 'r and R' },
  KC_COMM: { name: 'L', alias: 'DV_L', title: 'l and L' },
  KC_DOT: { name: 'P', alias: 'DV_P', title: 'p and P' },
  KC_SLSH: { name: 'J', alias: 'DV_J', title: 'j and J' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ * │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 0 │ 0 │ + │ % │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ ? │ < │ > │   │ ! │   │   │   │   │   │   │ = │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │   │ # │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ ç │ | │   │ @ │   │   │   │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '*', alias: 'DV_ASTR', title: '*' },
  KC_TILD: { name: '*', alias: 'DV_ASTR', title: '*' },
  'S(KC_1)': { name: '1', alias: 'DV_1', title: '1' },
  KC_EXLM: { name: '1', alias: 'DV_1', title: '1' },
  'S(KC_2)': { name: '2', alias: 'DV_2', title: '2' },
  KC_AT: { name: '2', alias: 'DV_2', title: '2' },
  'S(KC_3)': { name: '3', alias: 'DV_3', title: '3' },
  KC_HASH: { name: '3', alias: 'DV_3', title: '3' },
  'S(KC_4)': { name: '4', alias: 'DV_4', title: '4' },
  KC_DLR: { name: '4', alias: 'DV_4', title: '4' },
  'S(KC_5)': { name: '5', alias: 'DV_5', title: '5' },
  KC_PERC: { name: '5', alias: 'DV_5', title: '5' },
  'S(KC_6)': { name: '6', alias: 'DV_6', title: '6' },
  KC_CIRC: { name: '6', alias: 'DV_6', title: '6' },
  'S(KC_7)': { name: '7', alias: 'DV_7', title: '7' },
  KC_AMPR: { name: '7', alias: 'DV_7', title: '7' },
  'S(KC_8)': { name: '8', alias: 'DV_8', title: '8' },
  KC_ASTR: { name: '8', alias: 'DV_8', title: '8' },
  'S(KC_9)': { name: '9', alias: 'DV_9', title: '9' },
  KC_LPRN: { name: '9', alias: 'DV_9', title: '9' },
  'S(KC_0)': { name: '0', alias: 'DV_0', title: '0' },
  KC_RPRN: { name: '0', alias: 'DV_0', title: '0' },
  'S(KC_MINS)': { name: '+', alias: 'DV_PLUS', title: '+' },
  KC_UNDS: { name: '+', alias: 'DV_PLUS', title: '+' },
  'S(KC_EQL)': { name: '%', alias: 'DV_PERC', title: '%' },
  KC_PLUS: { name: '%', alias: 'DV_PERC', title: '%' },
  // Row 2
  'S(KC_Q)': { name: '?', alias: 'DV_QUES', title: '?' },
  'S(KC_W)': { name: '<', alias: 'DV_LABK', title: '<' },
  'S(KC_E)': { name: '>', alias: 'DV_RABK', title: '>' },
  'S(KC_T)': { name: '!', alias: 'DV_EXLM', title: '!' },
  'S(KC_RBRC)': { name: '=', alias: 'DV_EQL', title: '=' },
  KC_RCBR: { name: '=', alias: 'DV_EQL', title: '=' },
  // Row 3
  'S(KC_NUHS)': { name: '#', alias: 'DV_HASH', title: '#' },
  // Row 4
  'S(KC_NUBS)': { name: 'ç', alias: 'DV_CCED', title: 'ç' },
  'S(KC_Z)': { name: '|', alias: 'DV_PIPE', title: '|' },
  'S(KC_C)': { name: '@', alias: 'DV_AT', title: '@' },

  /* Other keys */
  KC_BSLS: { name: '#\n~', title: '◌̃ (dead) and #' },
  'S(KC_BSLS)': { name: '#', title: '#' },
  KC_LCBR: { name: 'Z', alias: 'S(DV_Z)', title: 'Z' },
  KC_LT: { name: 'L', alias: 'S(DV_L)', title: 'L' },
  KC_GT: { name: 'P', alias: 'S(DV_P)', title: 'P' },
  KC_COLN: { name: 'D', alias: 'S(DV_D)', title: 'D' },
  KC_PIPE: { name: '#', alias: 'DV_HASH', title: '#' },
  KC_QUES: { name: 'J', alias: 'S(DV_J)', title: 'J' },
  KC_DQUO: { name: 'W', alias: 'S(DV_W)', title: 'W' },

  SC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '«/*\nEsc',
    title: 'Esc normally, but « when GUI is active or * when Shift is active'
  }
};
