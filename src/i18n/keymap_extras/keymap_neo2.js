/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ^ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ ` │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ X │ V │ L │ C │ W │ K │ H │ G │ F │ Q │ ß │ ´ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │  L3  │ U │ I │ A │ E │ O │ S │ N │ R │ T │ D │ Y │ L3│    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │L4 │ Ü │ Ö │ Ä │ P │ Z │ B │ M │ , │ . │ J │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │ L4 │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '^', alias: 'NE_CIRC', title: '◌̂ (dead)' },
  KC_1: { name: '1', alias: 'NE_1', title: '1' },
  KC_2: { name: '2', alias: 'NE_2', title: '2' },
  KC_3: { name: '3', alias: 'NE_3', title: '3' },
  KC_4: { name: '4', alias: 'NE_4', title: '4' },
  KC_5: { name: '5', alias: 'NE_5', title: '5' },
  KC_6: { name: '6', alias: 'NE_6', title: '6' },
  KC_7: { name: '7', alias: 'NE_7', title: '7' },
  KC_8: { name: '8', alias: 'NE_8', title: '8' },
  KC_9: { name: '9', alias: 'NE_9', title: '9' },
  KC_0: { name: '0', alias: 'NE_0', title: '0' },
  KC_MINS: { name: '-', alias: 'NE_MINS', title: '-' },
  KC_EQL: { name: '`', alias: 'NE_GRV', title: '◌̀ (dead)' },
  // Row 2
  KC_Q: { name: 'X', alias: 'NE_X', title: 'x and X' },
  KC_W: { name: 'V', alias: 'NE_V', title: 'v and V' },
  KC_E: { name: 'L', alias: 'NE_L', title: 'l and L' },
  KC_R: { name: 'C', alias: 'NE_C', title: 'c and C' },
  KC_T: { name: 'W', alias: 'NE_W', title: 'w and W' },
  KC_Y: { name: 'K', alias: 'NE_K', title: 'k and K' },
  KC_U: { name: 'H', alias: 'NE_H', title: 'h and H' },
  KC_I: { name: 'G', alias: 'NE_G', title: 'g and G' },
  KC_O: { name: 'F', alias: 'NE_F', title: 'f and F' },
  KC_P: { name: 'Q', alias: 'NE_Q', title: 'q and Q' },
  KC_LBRC: { name: 'ß', alias: 'NE_SS', title: 'ß' },
  KC_RBRC: { name: '´', alias: 'NE_ACUT', title: '◌́ (dead)' },
  // Row 3
  KC_CAPS: { name: 'L3L', alias: 'NE_L3L', title: 'Layer 3 Left' },
  KC_A: { name: 'U', alias: 'NE_U', title: 'u and U' },
  KC_S: { name: 'I', alias: 'NE_I', title: 'i and I' },
  KC_D: { name: 'A', alias: 'NE_A', title: 'a and A' },
  KC_F: { name: 'E', alias: 'NE_E', title: 'e and E' },
  KC_G: { name: 'O', alias: 'NE_O', title: 'o and O' },
  KC_H: { name: 'S', alias: 'NE_S', title: 's and S' },
  KC_J: { name: 'N', alias: 'NE_N', title: 'n and N' },
  KC_K: { name: 'R', alias: 'NE_R', title: 'r and R' },
  KC_L: { name: 'T', alias: 'NE_T', title: 't and T' },
  KC_SCLN: { name: 'D', alias: 'NE_D', title: 'd and D' },
  KC_QUOT: { name: 'Y', alias: 'NE_Y', title: 'y and Y' },
  KC_NUHS: { name: 'L3R', alias: 'NE_L3R', title: 'Layer 3 Right ' },
  // Row 4
  KC_NUBS: { name: 'L4L', alias: 'NE_L4L', title: 'Layer 4 Left' },
  KC_Z: { name: 'Ü', alias: 'NE_UDIA', title: 'ü and Ü' },
  KC_X: { name: 'Ö', alias: 'NE_ODIA', title: 'ö and Ö' },
  KC_C: { name: 'Ä', alias: 'NE_ADIA', title: 'ä and Ä' },
  KC_V: { name: 'P', alias: 'NE_P', title: 'p and P' },
  KC_B: { name: 'Z', alias: 'NE_Z', title: 'z and Z' },
  KC_N: { name: 'B', alias: 'NE_B', title: 'b and B' },
  KC_M: { name: 'M', alias: 'NE_M', title: 'm and M' },
  KC_COMM: { name: ',', alias: 'NE_COMM', title: ',' },
  KC_DOT: { name: '.', alias: 'NE_DOT', title: '.' },
  KC_SLSH: { name: 'J', alias: 'NE_J', title: 'j and J' },
  // Row 5
  KC_ALGR: { name: 'L4R', alias: 'NE_L4R', title: 'Layer 4 Right' },

  /* Other keys */
  KC_BSLS: { name: 'L3R', title: 'Layer 3 Right' },
  'S(KC_BSLS)': { name: 'L3R', title: 'Layer 3 Right' },
  KC_TILD: { name: '^', alias: 'S(NE_CIRC)', title: '^' },
  KC_EXLM: { name: '1', alias: 'S(NE_1)', title: '1' },
  KC_AT: { name: '2', alias: 'S(NE_2)', title: '2' },
  KC_HASH: { name: '3', alias: 'S(NE_3)', title: '3' },
  KC_DLR: { name: '4', alias: 'S(NE_4)', title: '4' },
  KC_PERC: { name: '5', alias: 'S(NE_5)', title: '5' },
  KC_CIRC: { name: '6', alias: 'S(NE_6)', title: '6' },
  KC_AMPR: { name: '7', alias: 'S(NE_7)', title: '7' },
  KC_ASTR: { name: '8', alias: 'S(NE_8)', title: '8' },
  KC_LPRN: { name: '9', alias: 'S(NE_9)', title: '9' },
  KC_RPRN: { name: '0', alias: 'S(NE_0)', title: '0' },
  KC_UNDS: { name: '-', alias: 'S(NE_MINS)', title: '-' },
  KC_PLUS: { name: '`', alias: 'S(NE_GRV)', title: '`' },
  KC_LCBR: { name: 'ß', alias: 'S(NE_SS)', title: 'ß' },
  KC_RCBR: { name: '´', alias: 'S(NE_ACUT)', title: '´' },
  KC_LT: { name: ',', alias: 'S(NE_COMM)', title: ',' },
  KC_GT: { name: '.', alias: 'S(NE_DOT)', title: '.' },
  KC_COLN: { name: 'D', alias: 'S(NE_D)', title: 'D' },
  KC_PIPE: { name: 'L3R', alias: 'NE_L3R', title: 'Layer 3 Right' },
  KC_QUES: { name: 'J', alias: 'S(NE_J)', title: 'J' },
  KC_DQUO: { name: 'Y', alias: 'S(NE_Y)', title: 'Y' },

  SC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '^\nEsc',
    title: 'Esc normally, but ^ when Shift or GUI is active'
  }
};
