/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ $ │ " │ « │ » │ ( │ ) │ @ │ + │ - │ / │ * │ = │ % │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ B │ É │ P │ O │ È │ ^ │ V │ D │ L │ J │ Z │ W │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ A │ U │ I │ E │ , │ C │ T │ S │ R │ N │ M │ Ç │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ Ê │ À │ Y │ X │ . │ K │ ' │ Q │ G │ H │ F │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '#\n$', alias: 'BP_DLR', title: '$ and #' },
  KC_1: { name: '1\n"', alias: 'BP_DQUO', title: '" and 1' },
  KC_2: { name: '2\n«', alias: 'BP_LDAQ', title: '« and 2' },
  KC_3: { name: '3\n»', alias: 'BP_RDAQ', title: '» and 3' },
  KC_4: { name: '4\n(', alias: 'BP_LPRN', title: '( and 4' },
  KC_5: { name: '5\n)', alias: 'BP_RPRN', title: ') and 5' },
  KC_6: { name: '6\n@', alias: 'BP_AT', title: '@ and 6' },
  KC_7: { name: '7\n+', alias: 'BP_PLUS', title: '+ and 7' },
  KC_8: { name: '8\n-', alias: 'BP_MINS', title: '- and 8' },
  KC_9: { name: '9\n/', alias: 'BP_SLSH', title: '/ and 9' },
  KC_0: { name: '0\n*', alias: 'BP_ASTR', title: '* and 0' },
  KC_MINS: { name: '°\n=', alias: 'BP_EQL', title: '= and °' },
  KC_EQL: { name: '`\n%', alias: 'BP_PERC', title: '% and `' },
  // Row 2
  KC_Q: { name: 'B', alias: 'BP_B', title: 'b and B' },
  KC_W: { name: 'É', alias: 'BP_EACU', title: 'é and É' },
  KC_E: { name: 'P', alias: 'BP_P', title: 'p and P' },
  KC_R: { name: 'O', alias: 'BP_O', title: 'o and O' },
  KC_T: { name: 'È', alias: 'BP_EGRV', title: 'è and È' },
  KC_Y: { name: '!\n^', alias: 'BP_DCIR', title: '◌̂ (dead) and !' },
  KC_U: { name: 'V', alias: 'BP_V', title: 'v and V' },
  KC_I: { name: 'D', alias: 'BP_D', title: 'd and D' },
  KC_O: { name: 'L', alias: 'BP_L', title: 'l and L' },
  KC_P: { name: 'J', alias: 'BP_J', title: 'j and J' },
  KC_LBRC: { name: 'Z', alias: 'BP_Z', title: 'z and Z' },
  KC_RBRC: { name: 'W', alias: 'BP_W', title: 'w and W' },
  // Row 3
  KC_A: { name: 'A', alias: 'BP_A', title: 'a and A' },
  KC_S: { name: 'U', alias: 'BP_U', title: 'u and U' },
  KC_D: { name: 'I', alias: 'BP_I', title: 'i and I' },
  KC_F: { name: 'E', alias: 'BP_E', title: 'e and E' },
  KC_G: { name: ';\n,', alias: 'BP_COMM', title: ', and ;' },
  KC_H: { name: 'C', alias: 'BP_C', title: 'c and C' },
  KC_J: { name: 'T', alias: 'BP_T', title: 't and T' },
  KC_K: { name: 'S', alias: 'BP_S', title: 's and S' },
  KC_L: { name: 'R', alias: 'BP_R', title: 'r and R' },
  KC_SCLN: { name: 'N', alias: 'BP_N', title: 'n and N' },
  KC_QUOT: { name: 'M', alias: 'BP_M', title: 'm and M' },
  KC_BSLS: { name: 'Ç', alias: 'BP_CCED', title: 'ç and Ç' },
  // Row 4
  KC_NUBS: { name: 'Ê', alias: 'BP_ECIR', title: 'ê and Ê' },
  KC_Z: { name: 'À', alias: 'BP_AGRV', title: 'à and À' },
  KC_X: { name: 'Y', alias: 'BP_Y', title: 'y and Y' },
  KC_C: { name: 'X', alias: 'BP_X', title: 'x and X' },
  KC_V: { name: ':\n.', alias: 'BP_DOT', title: '. and :' },
  KC_B: { name: 'K', alias: 'BP_K', title: 'k and K' },
  KC_N: { name: "?\n'", alias: 'BP_QUOT', title: "' and ?" },
  KC_M: { name: 'Q', alias: 'BP_Q', title: 'q and Q' },
  KC_COMM: { name: 'G', alias: 'BP_G', title: 'g and G' },
  KC_DOT: { name: 'H', alias: 'BP_H', title: 'h and H' },
  KC_SLSH: { name: 'F', alias: 'BP_F', title: 'f and F' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ # │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ° │ ` │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │ ! │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │ ; │   │   │   │   │   │   │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │ : │   │ ? │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '#', alias: 'BP_HASH', title: '#' },
  KC_TILD: { name: '#', alias: 'BP_HASH', title: '#' },
  'S(KC_1)': { name: '1', alias: 'BP_1', title: '1' },
  KC_EXLM: { name: '1', alias: 'BP_1', title: '1' },
  'S(KC_2)': { name: '2', alias: 'BP_2', title: '2' },
  KC_AT: { name: '2', alias: 'BP_2', title: '2' },
  'S(KC_3)': { name: '3', alias: 'BP_3', title: '3' },
  KC_HASH: { name: '3', alias: 'BP_3', title: '3' },
  'S(KC_4)': { name: '4', alias: 'BP_4', title: '4' },
  KC_DLR: { name: '4', alias: 'BP_4', title: '4' },
  'S(KC_5)': { name: '5', alias: 'BP_5', title: '5' },
  KC_PERC: { name: '5', alias: 'BP_5', title: '5' },
  'S(KC_6)': { name: '6', alias: 'BP_6', title: '6' },
  KC_CIRC: { name: '6', alias: 'BP_6', title: '6' },
  'S(KC_7)': { name: '7', alias: 'BP_7', title: '7' },
  KC_AMPR: { name: '7', alias: 'BP_7', title: '7' },
  'S(KC_8)': { name: '8', alias: 'BP_8', title: '8' },
  KC_ASTR: { name: '8', alias: 'BP_8', title: '8' },
  'S(KC_9)': { name: '9', alias: 'BP_9', title: '9' },
  KC_LPRN: { name: '9', alias: 'BP_9', title: '9' },
  'S(KC_0)': { name: '0', alias: 'BP_0', title: '0' },
  KC_RPRN: { name: '0', alias: 'BP_0', title: '0' },
  'S(KC_MINS)': { name: '°', alias: 'BP_DEG', title: '°' },
  KC_UNDS: { name: '°', alias: 'BP_DEG', title: '°' },
  'S(KC_EQL)': { name: '`', alias: 'BP_GRV', title: '`' },
  KC_PLUS: { name: '`', alias: 'BP_GRV', title: '`' },
  // Row 2
  'S(KC_Y)': { name: '!', alias: 'BP_EXLM', title: '!' },
  // Row 3
  'S(KC_G)': { name: ';', alias: 'BP_SCLN', title: ';' },
  // Row 4
  'S(KC_V)': { name: ':', alias: 'BP_COLN', title: ':' },
  'S(KC_N)': { name: '?', alias: 'BP_QUES', title: '?' },
  // Row 5
  'S(KC_SPC)': { name: 'NBSP', alias: 'BP_NBSP', title: 'Non-breaking space' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ – │ — │ < │ > │ [ │ ] │ ^ │ ± │ − │ ÷ │ × │ ≠ │ ‰ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ | │ ´ │ & │ Œ │ ` │ ¡ │ ˇ │ Ð │ / │ Ĳ │ Ə │ ˘ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Æ │ Ù │ ¨ │ € │   │ © │ Þ │ ẞ │ ® │ ~ │ ¯ │ ¸ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │ \ │ { │ } │ … │ ~ │ ¿ │ ° │   │ † │ ˛ │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │           _            │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_GRV)': { name: '–', alias: 'BP_NDSH', title: '–' },
  'ALGR(KC_1)': { name: '—', alias: 'BP_MDSH', title: '—' },
  'ALGR(KC_2)': { name: '<', alias: 'BP_LABK', title: '<' },
  'ALGR(KC_3)': { name: '>', alias: 'BP_RABK', title: '>' },
  'ALGR(KC_4)': { name: '[', alias: 'BP_LBRC', title: '[' },
  'ALGR(KC_5)': { name: ']', alias: 'BP_RBRC', title: ']' },
  'ALGR(KC_6)': { name: '^', alias: 'BP_CIRC', title: '^' },
  'ALGR(KC_7)': { name: '±', alias: 'BP_PLMN', title: '±' },
  'ALGR(KC_8)': { name: '−', alias: 'BP_MMNS', title: '−' },
  'ALGR(KC_9)': { name: '÷', alias: 'BP_DIV', title: '÷' },
  'ALGR(KC_0)': { name: '×', alias: 'BP_MUL', title: '×' },
  'ALGR(KC_MINS)': { name: '≠', alias: 'BP_NEQL', title: '≠' },
  'ALGR(KC_EQL)': { name: '‰', alias: 'BP_PERM', title: '‰' },
  // Row 2
  'ALGR(KC_Q)': { name: '|', alias: 'BP_PIPE', title: '|' },
  'ALGR(KC_W)': { name: '´', alias: 'BP_ACUT', title: '◌́ (dead)' },
  'ALGR(KC_E)': { name: '&', alias: 'BP_AMPR', title: '&' },
  'ALGR(KC_R)': { name: 'Œ', alias: 'BP_OE', title: 'Œ' },
  'ALGR(KC_T)': { name: '`', alias: 'BP_DGRV', title: '◌̀ (dead)' },
  'ALGR(KC_Y)': { name: '¡', alias: 'BP_IEXL', title: '¡' },
  'ALGR(KC_U)': { name: 'ˇ', alias: 'BP_CARN', title: '◌̌ (dead)' },
  'ALGR(KC_I)': { name: 'Ð', alias: 'BP_ETH', title: 'Ð' },
  'ALGR(KC_O)': { name: '/', alias: 'BP_DSLS', title: '/ (dead)' },
  'ALGR(KC_P)': { name: 'Ĳ', alias: 'BP_IJ', title: 'Ĳ' },
  'ALGR(KC_LBRC)': { name: 'Ə', alias: 'BP_SCHW', title: 'Ə' },
  'ALGR(KC_RBRC)': { name: '˘', alias: 'BP_BREV', title: '◌̆ (dead)' },
  // Row 3
  'ALGR(KC_A)': { name: 'Æ', alias: 'BP_AE', title: 'Æ' },
  'ALGR(KC_S)': { name: 'Ù', alias: 'BP_UGRV', title: 'Ù' },
  'ALGR(KC_D)': { name: '¨', alias: 'BP_DIAE', title: '◌̈ (dead)' },
  'ALGR(KC_F)': { name: '€', alias: 'BP_EURO', title: '€' },
  'ALGR(KC_H)': { name: '©', alias: 'BP_COPY', title: '©' },
  'ALGR(KC_J)': { name: 'Þ', alias: 'BP_THRN', title: 'Þ' },
  'ALGR(KC_K)': { name: 'ẞ', alias: 'BP_SS', title: 'ẞ' },
  'ALGR(KC_L)': { name: '®', alias: 'BP_REGD', title: '®' },
  'ALGR(KC_SCLN)': { name: '~', alias: 'BP_DTIL', title: '◌̃ (dead)' },
  'ALGR(KC_QUOT)': { name: '¯', alias: 'BP_MACR', title: '◌̄ (dead)' },
  'ALGR(KC_BSLS)': { name: '¸', alias: 'BP_CEDL', title: '◌̧ (dead)' },
  // Row 4
  'ALGR(KC_Z)': { name: '\\', alias: 'BP_BSLS', title: '\\' },
  'ALGR(KC_X)': { name: '{', alias: 'BP_LCBR', title: '{' },
  'ALGR(KC_C)': { name: '}', alias: 'BP_RCBR', title: '}' },
  'ALGR(KC_V)': { name: '…', alias: 'BP_ELLP', title: '…' },
  'ALGR(KC_B)': { name: '~', alias: 'BP_TILD', title: '~' },
  'ALGR(S(KC_N))': { name: '¿', alias: 'BP_IQUE', title: '¿' },
  'ALGR(KC_M)': { name: '°', alias: 'BP_RNGA', title: '◌̊ (dead)' },
  'ALGR(KC_COMM)': { name: 'µ', alias: 'BP_DGRK', title: 'Dead Greek key' },
  'ALGR(KC_DOT)': { name: '†', alias: 'BP_DAGG', title: '†' },
  'ALGR(KC_SLSH)': { name: '˛', alias: 'BP_OGON', title: '◌̨ (dead)' },
  // Row 5
  'ALGR(KC_SPC)': { name: '_', alias: 'BP_UNDS', title: '_' },

  /* Shift+AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ¶ │ „ │ “ │ ” │ ≤ │ ≥ │   │ ¬ │ ¼ │ ½ │ ¾ │ ′ │ ″ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ ¦ │ ˝ │ § │   │   │   │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │ ˙ │ ¤ │ ̛  │ ſ │   │   │ ™ │   │ º │ , │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │ ‘ │ ’ │ · │ ⌨ │ ̉  │ ̣  │   │ ‡ │ ª │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(ALGR(KC_GRV))': { name: '¶', alias: 'BP_PARA', title: '¶' },
  'S(ALGR(KC_1))': { name: '„', alias: 'BP_DLQU', title: '„' },
  'S(ALGR(KC_2))': { name: '“', alias: 'BP_LDQU', title: '“' },
  'S(ALGR(KC_3))': { name: '”', alias: 'BP_RDQU', title: '”' },
  'S(ALGR(KC_4))': { name: '≤', alias: 'BP_LEQL', title: '≤' },
  'S(ALGR(KC_5))': { name: '≥', alias: 'BP_GEQL', title: '≥' },
  'S(ALGR(KC_7))': { name: '¬', alias: 'BP_NOT', title: '¬' },
  'S(ALGR(KC_8))': { name: '¼', alias: 'BP_QRTR', title: '¼' },
  'S(ALGR(KC_9))': { name: '½', alias: 'BP_HALF', title: '½' },
  'S(ALGR(KC_0))': { name: '¾', alias: 'BP_TQTR', title: '¾' },
  'S(ALGR(KC_MINS))': { name: '′', alias: 'BP_PRIM', title: '′' },
  'S(ALGR(KC_EQL))': { name: '″', alias: 'BP_DPRM', title: '″' },
  // Row 2
  'S(ALGR(KC_Q))': { name: '¦', alias: 'BP_BRKP', title: '¦' },
  'S(ALGR(KC_W))': { name: '˝', alias: 'BP_DACU', title: '◌̋ (dead)' },
  'S(ALGR(KC_E))': { name: '§', alias: 'BP_SECT', title: '§' },
  // Row 3
  'S(ALGR(KC_D))': { name: '˙', alias: 'BP_DOTA', title: '◌̇ (dead)' },
  'S(ALGR(KC_F))': { name: '¤', alias: 'BP_CURR', title: '¤ (dead)' },
  'S(ALGR(KC_G))': { name: '◌̛', alias: 'BP_HORN', title: '◌̛ (dead)' },
  'S(ALGR(KC_H))': { name: 'ſ', alias: 'BP_LNGS', title: 'ſ' },
  'S(ALGR(KC_L))': { name: '™', alias: 'BP_TM', title: '™' },
  'S(ALGR(KC_QUOT))': { name: 'º', alias: 'BP_MORD', title: 'º' },
  'S(ALGR(KC_BSLS))': { name: ',', alias: 'BP_DCMM', title: '◌̦ (dead)' },
  // Row 4
  'S(ALGR(KC_X))': { name: '‘', alias: 'BP_LSQU', title: '‘' },
  'S(ALGR(KC_C))': { name: '’', alias: 'BP_RSQU', title: '’' },
  'S(ALGR(KC_V))': { name: '·', alias: 'BP_MDDT', title: '·' },
  'S(ALGR(KC_B))': { name: '⌨', alias: 'BP_KEYB', title: '⌨' },
  'S(ALGR(KC_N))': { name: '◌̉', alias: 'BP_HOKA', title: '◌̉ (dead)' },
  'S(ALGR(KC_M))': { name: '◌̣', alias: 'BP_DOTB', title: '◌̣ (dead)' },
  'S(ALGR(KC_DOT))': { name: '‡', alias: 'BP_DDAG', title: '‡' },
  'S(ALGR(KC_SLSH))': { name: 'ª', alias: 'BP_FORD', title: 'ª' },
  // Row 5
  'S(ALGR(KC_SPC))': {
    name: 'NNBS',
    alias: 'BP_NNBS',
    title: 'Narrow non-breaking space'
  },

  /* Other keys */
  KC_NUHS: { name: 'Ç', title: 'Ç' },
  'S(KC_NUHS)': { name: 'Ç', title: 'Ç' },
  KC_LCBR: { name: 'Z', alias: 'S(BP_Z)', title: 'Z' },
  KC_RCBR: { name: 'W', alias: 'S(BP_W)', title: 'W' },
  KC_LT: { name: 'G', alias: 'S(BP_G)', title: 'G' },
  KC_GT: { name: 'H', alias: 'S(BP_H)', title: 'H' },
  KC_COLN: { name: 'N', alias: 'S(BP_N)', title: 'N' },
  KC_PIPE: { name: 'Ç', alias: 'BP_CCED', title: 'Ç' },
  KC_QUES: { name: 'F', alias: 'S(BP_F)', title: 'F' },
  KC_DQUO: { name: 'M', alias: 'S(BP_M)', title: 'M' },

  SC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '$/#\nEsc',
    title: 'Esc normally, but $ when GUI is active or # when Shift is active'
  }
};
