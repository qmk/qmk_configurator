/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ $ │ " │ « │ » │ ( │ ) │ @ │ + │ - │ / │ * │ = │ % │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ B │ É │ P │ O │ È │ ^ │ V │ D │ L │ J │ Z │ W │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ A │ U │ I │ E │ , │ C │ T │ S │ R │ N │ M │ Ç │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ Ê │ À │ Y │ X │ . │ K │ ' │ Q │ G │ H │ F │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '#\n$', title: 'BP_DLR' },
  KC_1: { name: '1\n"', title: 'BP_DQUO' },
  KC_2: { name: '2\n«', title: 'BP_LDAQ' },
  KC_3: { name: '3\n»', title: 'BP_RDAQ' },
  KC_4: { name: '4\n(', title: 'BP_LPRN' },
  KC_5: { name: '5\n)', title: 'BP_RPRN' },
  KC_6: { name: '6\n@', title: 'BP_AT' },
  KC_7: { name: '7\n+', title: 'BP_PLUS' },
  KC_8: { name: '8\n-', title: 'BP_MINS' },
  KC_9: { name: '9\n/', title: 'BP_SLSH' },
  KC_0: { name: '0\n*', title: 'BP_ASTR' },
  KC_MINS: { name: '°\n=', title: 'BP_EQL' },
  KC_EQL: { name: '`\n%', title: 'BP_PERC' },
  // Row 2
  KC_Q: { name: 'B', title: 'BP_B' },
  KC_W: { name: 'É', title: 'BP_EACU' },
  KC_E: { name: 'P', title: 'BP_P' },
  KC_R: { name: 'O', title: 'BP_O' },
  KC_T: { name: 'È', title: 'BP_EGRV' },
  KC_Y: { name: '!\n^', title: 'BP_DCIR (dead)' },
  KC_U: { name: 'V', title: 'BP_V' },
  KC_I: { name: 'D', title: 'BP_D' },
  KC_O: { name: 'L', title: 'BP_L' },
  KC_P: { name: 'J', title: 'BP_J' },
  KC_LBRC: { name: 'Z', title: 'BP_Z' },
  KC_RBRC: { name: 'W', title: 'BP_W' },
  // Row 3
  KC_A: { name: 'A', title: 'BP_A' },
  KC_S: { name: 'U', title: 'BP_U' },
  KC_D: { name: 'I', title: 'BP_I' },
  KC_F: { name: 'E', title: 'BP_E' },
  KC_G: { name: ';\n,', title: 'BP_COMM' },
  KC_H: { name: 'C', title: 'BP_C' },
  KC_J: { name: 'T', title: 'BP_T' },
  KC_K: { name: 'S', title: 'BP_S' },
  KC_L: { name: 'R', title: 'BP_R' },
  KC_SCLN: { name: 'N', title: 'BP_N' },
  KC_QUOT: { name: 'M', title: 'BP_M' },
  KC_BSLS: { name: 'Ç', title: 'BP_CCED' },
  // Row 4
  KC_NUBS: { name: 'Ê', title: 'BP_ECIR' },
  KC_Z: { name: 'À', title: 'BP_AGRV' },
  KC_X: { name: 'Y', title: 'BP_Y' },
  KC_C: { name: 'X', title: 'BP_X' },
  KC_V: { name: ':\n.', title: 'BP_DOT' },
  KC_B: { name: 'K', title: 'BP_K' },
  KC_N: { name: "?\n'", title: 'BP_QUOT' },
  KC_M: { name: 'Q', title: 'BP_Q' },
  KC_COMM: { name: 'G', title: 'BP_G' },
  KC_DOT: { name: 'H', title: 'BP_H' },
  KC_SLSH: { name: 'F', title: 'BP_F' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ # │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ° │ ` │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │ ! │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │ ; │   │   │   │   │   │   │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │ : │   │ ? │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '#', title: 'BP_HASH' },
  KC_TILD: { name: '#', title: 'BP_HASH' },
  'S(KC_1)': { name: '1', title: 'BP_1' },
  KC_EXLM: { name: '1', title: 'BP_1' },
  'S(KC_2)': { name: '2', title: 'BP_2' },
  KC_AT: { name: '2', title: 'BP_2' },
  'S(KC_3)': { name: '3', title: 'BP_3' },
  KC_HASH: { name: '3', title: 'BP_3' },
  'S(KC_4)': { name: '4', title: 'BP_4' },
  KC_DLR: { name: '4', title: 'BP_4' },
  'S(KC_5)': { name: '5', title: 'BP_5' },
  KC_PERC: { name: '5', title: 'BP_5' },
  'S(KC_6)': { name: '6', title: 'BP_6' },
  KC_CIRC: { name: '6', title: 'BP_6' },
  'S(KC_7)': { name: '7', title: 'BP_7' },
  KC_AMPR: { name: '7', title: 'BP_7' },
  'S(KC_8)': { name: '8', title: 'BP_8' },
  KC_ASTR: { name: '8', title: 'BP_8' },
  'S(KC_9)': { name: '9', title: 'BP_9' },
  KC_LPRN: { name: '9', title: 'BP_9' },
  'S(KC_0)': { name: '0', title: 'BP_0' },
  KC_RPRN: { name: '0', title: 'BP_0' },
  'S(KC_MINS)': { name: '°', title: 'BP_DEG' },
  KC_UNDS: { name: '°', title: 'BP_DEG' },
  'S(KC_EQL)': { name: '`', title: 'BP_GRV' },
  KC_PLUS: { name: '`', title: 'BP_GRV' },
  // Row 2
  'S(KC_Y)': { name: '!', title: 'BP_EXLM' },
  // Row 3
  'S(KC_G)': { name: ';', title: 'BP_SCLN' },
  // Row 4
  'S(KC_V)': { name: ':', title: 'BP_COLN' },
  'S(KC_N)': { name: '?', title: 'BP_QUES' },
  // Row 5
  'S(KC_SPC)': {
    name: 'No-break space',
    title: 'BP_NBSP (non-breaking space)'
  },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ – │ — │ < │ > │ [ │ ] │ ^ │ ± │ − │ ÷ │ × │ ≠ │ ‰ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ | │ ´ │ & │ Œ │ ` │ ¡ │ ˇ │ Ð │ / │ Ĳ │ Ə │ ˘ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Æ │ Ù │ ¨ │ € │   │ © │ Þ │ ẞ │ ® │ ~ │ ¯ │ ¸ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │ \ │ { │ } │ … │ ~ │ ¿ │ ° │   │ † │ ˛ │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │           _            │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_GRV)': { name: '–', title: 'BP_NDSH' },
  'ALGR(KC_1)': { name: '—', title: 'BP_MDSH' },
  'ALGR(KC_2)': { name: '<', title: 'BP_LABK' },
  'ALGR(KC_3)': { name: '>', title: 'BP_RABK' },
  'ALGR(KC_4)': { name: '[', title: 'BP_LBRC' },
  'ALGR(KC_5)': { name: ']', title: 'BP_RBRC' },
  'ALGR(KC_6)': { name: '^', title: 'BP_CIRC' },
  'ALGR(KC_7)': { name: '±', title: 'BP_PLMN' },
  'ALGR(KC_8)': { name: '−', title: 'BP_MMNS' },
  'ALGR(KC_9)': { name: '÷', title: 'BP_DIV' },
  'ALGR(KC_0)': { name: '×', title: 'BP_MUL' },
  'ALGR(KC_MINS)': { name: '≠', title: 'BP_NEQL' },
  'ALGR(KC_EQL)': { name: '‰', title: 'BP_PERM' },
  // Row 2
  'ALGR(KC_Q)': { name: '|', title: 'BP_PIPE' },
  'ALGR(KC_W)': { name: '´', title: 'BP_ACUT (dead)' },
  'ALGR(KC_E)': { name: '&', title: 'BP_AMPR' },
  'ALGR(KC_R)': { name: 'Œ', title: 'BP_OE' },
  'ALGR(KC_T)': { name: '`', title: 'BP_DGRV (dead)' },
  'ALGR(KC_Y)': { name: '¡', title: 'BP_IEXL' },
  'ALGR(KC_U)': { name: 'ˇ', title: 'BP_CARN (dead)' },
  'ALGR(KC_I)': { name: 'Ð', title: 'BP_ETH' },
  'ALGR(KC_O)': { name: '/', title: 'BP_DSLS (dead)' },
  'ALGR(KC_P)': { name: 'Ĳ', title: 'BP_IJ' },
  'ALGR(KC_LBRC)': { name: 'Ə', title: 'BP_SCHW' },
  'ALGR(KC_RBRC)': { name: '˘', title: 'BP_BREV (dead)' },
  // Row 3
  'ALGR(KC_A)': { name: 'Æ', title: 'BP_AE' },
  'ALGR(KC_S)': { name: 'Ù', title: 'BP_UGRV' },
  'ALGR(KC_D)': { name: '¨', title: 'BP_DIAE (dead)' },
  'ALGR(KC_F)': { name: '€', title: 'BP_EURO' },
  'ALGR(KC_H)': { name: '©', title: 'BP_COPY' },
  'ALGR(KC_J)': { name: 'Þ', title: 'BP_THRN' },
  'ALGR(KC_K)': { name: 'ẞ', title: 'BP_SS' },
  'ALGR(KC_L)': { name: '®', title: 'BP_REGD' },
  'ALGR(KC_SCLN)': { name: '~', title: 'BP_DTIL (dead)' },
  'ALGR(KC_QUOT)': { name: '¯', title: 'BP_MACR (dead)' },
  'ALGR(KC_BSLS)': { name: '¸', title: 'BP_CEDL (dead)' },
  // Row 4
  'ALGR(KC_Z)': { name: '\\', title: 'BP_BSLS' },
  'ALGR(KC_X)': { name: '{', title: 'BP_LCBR' },
  'ALGR(KC_C)': { name: '}', title: 'BP_RCBR' },
  'ALGR(KC_V)': { name: '…', title: 'BP_ELLP' },
  'ALGR(KC_B)': { name: '~', title: 'BP_TILD' },
  'ALGR(S(KC_N))': { name: '¿', title: 'BP_IQUE' },
  'ALGR(KC_M)': { name: '°', title: 'BP_RNGA (dead)' },
  'ALGR(KC_COMM)': { name: 'µ', title: 'BP_DGRK (dead Greek key)' },
  'ALGR(KC_DOT)': { name: '†', title: 'BP_DAGG' },
  'ALGR(KC_SLSH)': { name: '˛', title: 'BP_OGON (dead)' },
  // Row 5
  'ALGR(KC_SPC)': { name: '_', title: 'BP_UNDS' },

  /* Shift+AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ¶ │ „ │ “ │ ” │ ≤ │ ≥ │   │ ¬ │ ¼ │ ½ │ ¾ │ ′ │ ″ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ ¦ │ ˝ │ § │   │   │   │   │   │   │   │   │   │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │ ˙ │ ¤ │ ̛  │ ſ │   │   │ ™ │   │ º │ , │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │ ‘ │ ’ │ · │ ⌨ │ ̉  │ ̣  │   │ ‡ │ ª │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(ALGR(KC_GRV))': { name: '¶', title: 'BP_PARA' },
  'S(ALGR(KC_1))': { name: '„', title: 'BP_DLQU' },
  'S(ALGR(KC_2))': { name: '“', title: 'BP_LDQU' },
  'S(ALGR(KC_3))': { name: '”', title: 'BP_RDQU' },
  'S(ALGR(KC_4))': { name: '≤', title: 'BP_LEQL' },
  'S(ALGR(KC_5))': { name: '≥', title: 'BP_GEQL' },
  'S(ALGR(KC_7))': { name: '¬', title: 'BP_NOT' },
  'S(ALGR(KC_8))': { name: '¼', title: 'BP_QRTR' },
  'S(ALGR(KC_9))': { name: '½', title: 'BP_HALF' },
  'S(ALGR(KC_0))': { name: '¾', title: 'BP_TQTR' },
  'S(ALGR(KC_MINS))': { name: '′', title: 'BP_PRIM' },
  'S(ALGR(KC_EQL))': { name: '″', title: 'BP_DPRM' },
  // Row 2
  'S(ALGR(KC_Q))': { name: '¦', title: 'BP_BRKP' },
  'S(ALGR(KC_W))': { name: '˝', title: 'BP_DACU (dead)' },
  'S(ALGR(KC_E))': { name: '§', title: 'BP_SECT' },
  // Row 3
  'S(ALGR(KC_D))': { name: '˙', title: 'BP_DOTA (dead)' },
  'S(ALGR(KC_F))': { name: '¤', title: 'BP_CURR (dead)' },
  'S(ALGR(KC_G))': { name: '◌̛', title: 'BP_HORN (dead)' },
  'S(ALGR(KC_H))': { name: 'ſ', title: 'BP_LNGS' },
  'S(ALGR(KC_L))': { name: '™', title: 'BP_TM' },
  'S(ALGR(KC_QUOT))': { name: 'º', title: 'BP_MORD' },
  'S(ALGR(KC_BSLS))': { name: ',', title: 'BP_DCMM (dead)' },
  // Row 4
  'S(ALGR(KC_X))': { name: '‘', title: 'BP_LSQU' },
  'S(ALGR(KC_C))': { name: '’', title: 'BP_RSQU' },
  'S(ALGR(KC_V))': { name: '·', title: 'BP_MDDT' },
  'S(ALGR(KC_B))': { name: '⌨', title: 'BP_KEYB' },
  'S(ALGR(KC_N))': { name: '◌̉', title: 'BP_HOKA (dead)' },
  'S(ALGR(KC_M))': { name: '◌̣', title: 'BP_DOTB (dead)' },
  'S(ALGR(KC_DOT))': { name: '‡', title: 'BP_DDAG' },
  'S(ALGR(KC_SLSH))': { name: 'ª', title: 'BP_FORD' },
  // Row 5
  'S(ALGR(KC_SPC))': {
    name: 'Narrow no-break space',
    title: 'BP_NNBS (narrow non-breaking space)'
  },

  /* Other keys */
  KC_NUHS: { name: 'Ç', title: '' },
  'S(KC_NUHS)': { name: 'Ç', title: '' },
  KC_LCBR: { name: 'Z', title: 'S(BP_Z) (capital Z)' },
  KC_RCBR: { name: 'W', title: 'S(BP_W) (capital W)' },
  KC_LT: { name: 'G', title: 'S(BP_G) (capital G)' },
  KC_GT: { name: 'H', title: 'S(BP_H) (capital H)' },
  KC_COLN: { name: 'N', title: 'S(BP_N) (capital N)' },
  KC_PIPE: { name: 'Ç', title: 'BP_CCED (capital Ç)' },
  KC_QUES: { name: 'F', title: 'S(BP_F) (capital F)' },
  KC_DQUO: { name: 'M', title: 'S(BP_M) (capital M)' },

  KC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  KC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  KC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  KC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  KC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  KC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '$/#\nEsc',
    title: 'Esc normally, but $ when GUI is active or # when Shift is active'
  }
};
