/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ² │ & │ é │ " │ ' │ ( │ - │ è │ _ │ ç │ à │ ) │ = │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ A │ Z │ E │ R │ T │ Y │ U │ I │ O │ P │ ^ │ $ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Q │ S │ D │ F │ G │ H │ J │ K │ L │ M │ ù │ * │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ < │ W │ X │ C │ V │ B │ N │ , │ ; │ : │ ! │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '²', alias: 'FR_SUP2', title: '²' },
  KC_1: { name: '1\n&', alias: 'FR_AMPR', title: '& and 1' },
  KC_2: { name: '2\né', alias: 'FR_EACU', title: 'é and 2' },
  KC_3: { name: '3\n"', alias: 'FR_DQUO', title: '" and 3' },
  KC_4: { name: "4\n'", alias: 'FR_QUOT', title: "' and 4" },
  KC_5: { name: '5\n(', alias: 'FR_LPRN', title: '( and 5' },
  KC_6: { name: '6\n-', alias: 'FR_MINS', title: '- and 6' },
  KC_7: { name: '7\nè', alias: 'FR_EGRV', title: 'è and 7' },
  KC_8: { name: '8\n_', alias: 'FR_UNDS', title: '_ and 8' },
  KC_9: { name: '9\nç', alias: 'FR_CCED', title: 'ç and 9' },
  KC_0: { name: '0\nà', alias: 'FR_AGRV', title: 'à and 0' },
  KC_MINS: { name: '°\n)', alias: 'FR_RPRN', title: ') and °' },
  KC_EQL: { name: '+\n=', alias: 'FR_EQL', title: '= and +' },
  // Row 2
  KC_Q: { name: 'A', alias: 'FR_A', title: 'a and A' },
  KC_W: { name: 'Z', alias: 'FR_Z', title: 'z and Z' },
  KC_E: { name: 'E', alias: 'FR_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'FR_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'FR_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'FR_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'FR_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'FR_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'FR_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'FR_P', title: 'p and P' },
  KC_LBRC: {
    name: '¨\n^',
    alias: 'FR_CIRC',
    title: '◌̂ (dead) and ◌̈ (dead)'
  },
  KC_RBRC: { name: '£\n$', alias: 'FR_DLR', title: '$ and £' },
  // Row 3
  KC_A: { name: 'Q', alias: 'FR_Q', title: 'q and Q' },
  KC_S: { name: 'S', alias: 'FR_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'FR_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'FR_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'FR_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'FR_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'FR_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'FR_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'FR_L', title: 'l and L' },
  KC_SCLN: { name: 'M', alias: 'FR_M', title: 'm and M' },
  KC_QUOT: { name: '%\nù', alias: 'FR_UGRV', title: 'ù and %' },
  KC_NUHS: { name: 'µ\n*', alias: 'FR_ASTR', title: '* and µ' },
  // Row 4
  KC_NUBS: { name: '>\n<', alias: 'FR_LABK', title: '< and >' },
  KC_Z: { name: 'W', alias: 'FR_W', title: 'w and W' },
  KC_X: { name: 'X', alias: 'FR_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'FR_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'FR_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'FR_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'FR_N', title: 'n and N' },
  KC_M: { name: '?\n,', alias: 'FR_COMM', title: ', and ?' },
  KC_COMM: { name: '.\n;', alias: 'FR_SCLN', title: '; and .' },
  KC_DOT: { name: '/\n:', alias: 'FR_COLN', title: ': and /' },
  KC_SLSH: { name: '§\n!', alias: 'FR_EXLM', title: '! and §' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ ° │ + │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ ¨ │ £ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │ % │ µ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ > │   │   │   │   │   │   │ ? │ . │ / │ § │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_1)': { name: '1', alias: 'FR_1', title: '1' },
  KC_EXLM: { name: '1', alias: 'FR_1', title: '1' },
  'S(KC_2)': { name: '2', alias: 'FR_2', title: '2' },
  KC_AT: { name: '2', alias: 'FR_2', title: '2' },
  'S(KC_3)': { name: '3', alias: 'FR_3', title: '3' },
  KC_HASH: { name: '3', alias: 'FR_3', title: '3' },
  'S(KC_4)': { name: '4', alias: 'FR_4', title: '4' },
  KC_DLR: { name: '4', alias: 'FR_4', title: '4' },
  'S(KC_5)': { name: '5', alias: 'FR_5', title: '5' },
  KC_PERC: { name: '5', alias: 'FR_5', title: '5' },
  'S(KC_6)': { name: '6', alias: 'FR_6', title: '6' },
  KC_CIRC: { name: '6', alias: 'FR_6', title: '6' },
  'S(KC_7)': { name: '7', alias: 'FR_7', title: '7' },
  KC_AMPR: { name: '7', alias: 'FR_7', title: '7' },
  'S(KC_8)': { name: '8', alias: 'FR_8', title: '8' },
  KC_ASTR: { name: '8', alias: 'FR_8', title: '8' },
  'S(KC_9)': { name: '9', alias: 'FR_9', title: '9' },
  KC_LPRN: { name: '9', alias: 'FR_9', title: '9' },
  'S(KC_0)': { name: '0', alias: 'FR_0', title: '0' },
  KC_RPRN: { name: '0', alias: 'FR_0', title: '0' },
  'S(KC_MINS)': { name: '°', alias: 'FR_DEG', title: '°' },
  KC_UNDS: { name: '°', alias: 'FR_DEG', title: '°' },
  'S(KC_EQL)': { name: '+', alias: 'FR_PLUS', title: '+' },
  KC_PLUS: { name: '+', alias: 'FR_PLUS', title: '+' },
  // Row 2
  'S(KC_LBRC)': { name: '¨', alias: 'FR_DIAE', title: '◌̈ (dead)' },
  KC_LCBR: { name: '¨', alias: 'FR_DIAE', title: '◌̈ (dead)' },
  'S(KC_RBRC)': { name: '£', alias: 'FR_PND', title: '£' },
  KC_RCBR: { name: '£', alias: 'FR_PND', title: '£' },
  // Row 3
  'S(KC_QUOT)': { name: '%', alias: 'FR_PERC', title: '%' },
  KC_DQUO: { name: '%', alias: 'FR_PERC', title: '%' },
  'S(KC_NUHS)': { name: 'µ', alias: 'FR_MICR', title: 'µ' },
  // Row 4
  'S(KC_NUBS)': { name: '>', alias: 'FR_RABK', title: '>' },
  'S(KC_M)': { name: '?', alias: 'FR_QUES', title: '?' },
  'S(KC_COMM)': { name: '.', alias: 'FR_DOT', title: '.' },
  KC_LT: { name: '.', alias: 'FR_DOT', title: '.' },
  'S(KC_DOT)': { name: '/', alias: 'FR_SLSH', title: '/' },
  KC_GT: { name: '/', alias: 'FR_SLSH', title: '/' },
  'S(KC_SLSH)': { name: '§', alias: 'FR_SECT', title: '§' },
  KC_QUES: { name: '§', alias: 'FR_SECT', title: '§' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │   │   │ ~ │ # │ { │ [ │ | │ ` │ \ │   │ @ │ ] │ } │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │ € │   │   │   │   │   │   │   │   │ ¤ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │   │   │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │   │   │   │   │   │   │   │   │   │   │   │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_2)': { name: '~', alias: 'FR_TILD', title: '◌̃ (dead)' },
  'ALGR(KC_3)': { name: '#', alias: 'FR_HASH', title: '#' },
  'ALGR(KC_4)': { name: '{', alias: 'FR_LCBR', title: '{' },
  'ALGR(KC_5)': { name: '[', alias: 'FR_LBRC', title: '[' },
  'ALGR(KC_6)': { name: '|', alias: 'FR_PIPE', title: '|' },
  'ALGR(KC_7)': { name: '`', alias: 'FR_GRV', title: '◌̀ (dead)' },
  'ALGR(KC_8)': { name: '\\', alias: 'FR_BSLS', title: '\\' },
  'ALGR(KC_0)': { name: '@', alias: 'FR_AT', title: '@' },
  'ALGR(KC_MINS)': { name: ']', alias: 'FR_RBRC', title: ']' },
  'ALGR(KC_EQL)': { name: '}', alias: 'FR_RCBR', title: '}' },
  // Row 2
  'ALGR(KC_E)': { name: '€', alias: 'FR_EURO', title: '€' },
  'ALGR(KC_RBRC)': { name: '¤', alias: 'FR_CURR', title: '¤' },

  /* Other keys */
  KC_BSLS: { name: 'µ\n*', title: '* and µ' },
  'S(KC_BSLS)': { name: 'µ', title: 'µ' },
  KC_TILD: { name: '²', alias: 'S(FR_SUP2)', title: '²' },
  KC_COLN: { name: 'M', alias: 'S(FR_M)', title: 'M' },
  KC_PIPE: { name: 'µ', alias: 'FR_MICR', title: 'µ' },

  SC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '²\nEsc',
    title: 'Esc normally, but ² when Shift or GUI is active'
  }
};
