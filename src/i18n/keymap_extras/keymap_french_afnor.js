/* Copyright 2022 - Generated by convert_keymap_extras_header.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* French AZERTY - AFNOR NF Z71-300
 *
 * A standard for the French keyboard
 *
 * The project was launched at the end of 2015 on the proposal of the General
 * Delegation for the French language and the languages of France (Ministry
 * of Culture), starting from the observation that the current "azerty"
 * keyboards constrain the writing of French, languages regional and European
 * languages with Latin alphabet.
 *
 * For the first time, a standard (NF Z71-300) defines the placement of
 * characters on the French keyboard. It offers two layouts, one of which
 * closely follows the QWERTY keyboard used by most people who write in French.
 *
 * However, it is in many ways superior to the old keyboard:
 *
 * - it contains all the characters required to enter text in French (for example É, œ and ")
 * - it is designed to be more ergonomic and allow faster typing
 * - it includes almost 60 additional characters for entering foreign languages, technical content, etc
 * - however, the characters remain easy to locate thanks to intuitive groupings
 *
 * Source: https://norme-azerty.fr
 */

export default {
  /*
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ @ │ à │ é │ è │ ê │ ( │ ) │ ‘ │ ’ │ « │ » │ ' │ ^ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ A │ Z │ E │ R │ T │ Y │ U │ I │ O │ P │ - │ + │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ Q │ S │ D │ F │ G │ H │ J │ K │ L │ M │ / │ * │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ < │ W │ X │ C │ V │ B │ N │ . │ , │ : │ ; │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  KC_GRV: { name: '#\n@', alias: 'FR_AT', title: '@ and #' },
  KC_1: { name: '1\nà', alias: 'FR_AGRV', title: 'à and 1' },
  KC_2: { name: '2\né', alias: 'FR_EACU', title: 'é and 2' },
  KC_3: { name: '3\nè', alias: 'FR_EGRV', title: 'è and 3' },
  KC_4: { name: '4\nê', alias: 'FR_ECIR', title: 'ê and 4' },
  KC_5: { name: '5\n(', alias: 'FR_LPRN', title: '( and 5' },
  KC_6: { name: '6\n)', alias: 'FR_RPRN', title: ') and 6' },
  KC_7: { name: '7\n‘', alias: 'FR_LSQU', title: '‘ and 7' },
  KC_8: { name: '8\n’', alias: 'FR_RSQU', title: '’ and 8' },
  KC_9: { name: '9\n«', alias: 'FR_LDAQ', title: '« and 9' },
  KC_0: { name: '0\n»', alias: 'FR_RDAQ', title: '» and 0' },
  KC_MINS: { name: '"\n\'', alias: 'FR_QUOT', title: '\' and "' },
  KC_EQL: { name: '¨\n^', alias: 'FR_DCIR', title: '◌̂ (dead) and ◌̈ (dead)' },
  // Row 2
  KC_Q: { name: 'A', alias: 'FR_A', title: 'a and A' },
  KC_W: { name: 'Z', alias: 'FR_Z', title: 'z and Z' },
  KC_E: { name: 'E', alias: 'FR_E', title: 'e and E' },
  KC_R: { name: 'R', alias: 'FR_R', title: 'r and R' },
  KC_T: { name: 'T', alias: 'FR_T', title: 't and T' },
  KC_Y: { name: 'Y', alias: 'FR_Y', title: 'y and Y' },
  KC_U: { name: 'U', alias: 'FR_U', title: 'u and U' },
  KC_I: { name: 'I', alias: 'FR_I', title: 'i and I' },
  KC_O: { name: 'O', alias: 'FR_O', title: 'o and O' },
  KC_P: { name: 'P', alias: 'FR_P', title: 'p and P' },
  KC_LBRC: { name: '–\n-', alias: 'FR_MINS', title: '- and –' },
  KC_RBRC: { name: '±\n+', alias: 'FR_PLUS', title: '+ and ±' },
  // Row 3
  KC_A: { name: 'Q', alias: 'FR_Q', title: 'q and Q' },
  KC_S: { name: 'S', alias: 'FR_S', title: 's and S' },
  KC_D: { name: 'D', alias: 'FR_D', title: 'd and D' },
  KC_F: { name: 'F', alias: 'FR_F', title: 'f and F' },
  KC_G: { name: 'G', alias: 'FR_G', title: 'g and G' },
  KC_H: { name: 'H', alias: 'FR_H', title: 'h and H' },
  KC_J: { name: 'J', alias: 'FR_J', title: 'j and J' },
  KC_K: { name: 'K', alias: 'FR_K', title: 'k and K' },
  KC_L: { name: 'L', alias: 'FR_L', title: 'l and L' },
  KC_SCLN: { name: 'M', alias: 'FR_M', title: 'm and M' },
  KC_QUOT: { name: '\\\n/', alias: 'FR_SLSH', title: '/ and \\' },
  KC_NUHS: { name: '½\n*', alias: 'FR_ASTR', title: '* and ½' },
  // Row 4
  KC_NUBS: { name: '>\n<', alias: 'FR_LABK', title: '< and >' },
  KC_Z: { name: 'W', alias: 'FR_W', title: 'w and W' },
  KC_X: { name: 'X', alias: 'FR_X', title: 'x and X' },
  KC_C: { name: 'C', alias: 'FR_C', title: 'c and C' },
  KC_V: { name: 'V', alias: 'FR_V', title: 'v and V' },
  KC_B: { name: 'B', alias: 'FR_B', title: 'b and B' },
  KC_N: { name: 'N', alias: 'FR_N', title: 'n and N' },
  KC_M: { name: '?\n.', alias: 'FR_DOT', title: '. and ?' },
  KC_COMM: { name: '!\n,', alias: 'FR_COMM', title: ', and !' },
  KC_DOT: { name: '…\n:', alias: 'FR_COLN', title: ': and …' },
  KC_SLSH: { name: '=\n;', alias: 'FR_SCLN', title: '; and =' },

  /* Shifted symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ # │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ " │ ¨ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │   │   │   │   │   │   │ – │ ± │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │   │   │   │   │   │ \ │ ½ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ > │   │   │   │   │   │   │ ? │ ! │ … │ = │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(KC_GRV)': { name: '#', alias: 'FR_HASH', title: '#' },
  KC_TILD: { name: '#', alias: 'FR_HASH', title: '#' },
  'S(KC_1)': { name: '1', alias: 'FR_1', title: '1' },
  KC_EXLM: { name: '1', alias: 'FR_1', title: '1' },
  'S(KC_2)': { name: '2', alias: 'FR_2', title: '2' },
  KC_AT: { name: '2', alias: 'FR_2', title: '2' },
  'S(KC_3)': { name: '3', alias: 'FR_3', title: '3' },
  KC_HASH: { name: '3', alias: 'FR_3', title: '3' },
  'S(KC_4)': { name: '4', alias: 'FR_4', title: '4' },
  KC_DLR: { name: '4', alias: 'FR_4', title: '4' },
  'S(KC_5)': { name: '5', alias: 'FR_5', title: '5' },
  KC_PERC: { name: '5', alias: 'FR_5', title: '5' },
  'S(KC_6)': { name: '6', alias: 'FR_6', title: '6' },
  KC_CIRC: { name: '6', alias: 'FR_6', title: '6' },
  'S(KC_7)': { name: '7', alias: 'FR_7', title: '7' },
  KC_AMPR: { name: '7', alias: 'FR_7', title: '7' },
  'S(KC_8)': { name: '8', alias: 'FR_8', title: '8' },
  KC_ASTR: { name: '8', alias: 'FR_8', title: '8' },
  'S(KC_9)': { name: '9', alias: 'FR_9', title: '9' },
  KC_LPRN: { name: '9', alias: 'FR_9', title: '9' },
  'S(KC_0)': { name: '0', alias: 'FR_0', title: '0' },
  KC_RPRN: { name: '0', alias: 'FR_0', title: '0' },
  'S(KC_MINS)': { name: '"', alias: 'FR_DQUO', title: '"' },
  KC_UNDS: { name: '"', alias: 'FR_DQUO', title: '"' },
  'S(KC_EQL)': { name: '¨', alias: 'FR_DIAE', title: '◌̈ (dead)' },
  KC_PLUS: { name: '¨', alias: 'FR_DIAE', title: '◌̈ (dead)' },
  // Row 2
  'S(KC_LBRC)': { name: '–', alias: 'FR_NDSH', title: '–' },
  KC_LCBR: { name: '–', alias: 'FR_NDSH', title: '–' },
  'S(KC_RBRC)': { name: '±', alias: 'FR_PLMN', title: '±' },
  KC_RCBR: { name: '±', alias: 'FR_PLMN', title: '±' },
  // Row 3
  'S(KC_QUOT)': { name: '\\', alias: 'FR_BSLS', title: '\\' },
  KC_DQUO: { name: '\\', alias: 'FR_BSLS', title: '\\' },
  'S(KC_NUHS)': { name: '½', alias: 'FR_HALF', title: '½' },
  // Row 4
  'S(KC_NUBS)': { name: '>', alias: 'FR_RABK', title: '>' },
  'S(KC_M)': { name: '?', alias: 'FR_QUES', title: '?' },
  'S(KC_COMM)': { name: '!', alias: 'FR_EXLM', title: '!' },
  KC_LT: { name: '!', alias: 'FR_EXLM', title: '!' },
  'S(KC_DOT)': { name: '…', alias: 'FR_ELLP', title: '…' },
  KC_GT: { name: '…', alias: 'FR_ELLP', title: '…' },
  'S(KC_SLSH)': { name: '=', alias: 'FR_EQL', title: '=' },
  KC_QUES: { name: '=', alias: 'FR_EQL', title: '=' },

  /* AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ˘ │ § │ ´ │ ` │ & │ [ │ ] │ ¯ │ _ │ “ │ ” │ ° │ ˇ │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │ æ │ £ │ € │ ® │ { │ } │ ù │ ˙ │ œ │ % │ − │ † │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │ θ │ ß │ $ │ ¤ │ µ │ Eu│   │ ∕ │ | │ ∞ │ ÷ │ × │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ ≤ │ ʒ │ © │ ç │ ¸ │ − │ ~ │ ¿ │ ¡ │ · │ ≃ │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'ALGR(KC_GRV)': { name: '˘', alias: 'FR_BREV', title: '◌̆ (dead)' },
  'ALGR(KC_1)': { name: '§', alias: 'FR_SECT', title: '§' },
  'ALGR(KC_2)': { name: '´', alias: 'FR_ACUT', title: '◌́ (dead)' },
  'ALGR(KC_3)': { name: '`', alias: 'FR_GRV', title: '◌̀ (dead)' },
  'ALGR(KC_4)': { name: '&', alias: 'FR_AMPR', title: '&' },
  'ALGR(KC_5)': { name: '[', alias: 'FR_LBRC', title: '[' },
  'ALGR(KC_6)': { name: ']', alias: 'FR_RBRC', title: ']' },
  'ALGR(KC_7)': { name: '¯', alias: 'FR_MACR', title: '◌̄ (dead)' },
  'ALGR(KC_8)': { name: '_', alias: 'FR_UNDS', title: '_' },
  'ALGR(KC_9)': { name: '“', alias: 'FR_LDQU', title: '“' },
  'ALGR(KC_0)': { name: '”', alias: 'FR_RDQU', title: '”' },
  'ALGR(KC_MINS)': { name: '°', alias: 'FR_DEG', title: '°' },
  'ALGR(KC_EQL)': { name: 'ˇ', alias: 'FR_CARN', title: '◌̌ (dead)' },
  // Row 2
  'ALGR(KC_Q)': { name: 'æ', alias: 'FR_AE', title: 'æ' },
  'ALGR(KC_W)': { name: '£', alias: 'FR_PND', title: '£' },
  'ALGR(KC_E)': { name: '€', alias: 'FR_EURO', title: '€' },
  'ALGR(KC_R)': { name: '®', alias: 'FR_REGD', title: '®' },
  'ALGR(KC_T)': { name: '{', alias: 'FR_LCBR', title: '{' },
  'ALGR(KC_Y)': { name: '}', alias: 'FR_RCBR', title: '}' },
  'ALGR(KC_U)': { name: 'ù', alias: 'FR_UGRV', title: 'ù' },
  'ALGR(KC_I)': { name: '˙', alias: 'FR_DOTA', title: '◌̇ (dead)' },
  'ALGR(KC_O)': { name: 'œ', alias: 'FR_OE', title: 'œ' },
  'ALGR(KC_P)': { name: '%', alias: 'FR_PERC', title: '%' },
  'ALGR(KC_LBRC)': { name: '−', alias: 'FR_MMNS', title: '−' },
  'ALGR(KC_RBRC)': { name: '†', alias: 'FR_DAGG', title: '†' },
  // Row 3
  'ALGR(KC_A)': { name: 'θ', alias: 'FR_THET', title: 'θ' },
  'ALGR(KC_S)': { name: 'ß', alias: 'FR_SS', title: 'ß' },
  'ALGR(KC_D)': { name: '$', alias: 'FR_DLR', title: '$' },
  'ALGR(KC_F)': { name: '¤', alias: 'FR_CURR', title: 'Dead monetary key' },
  'ALGR(KC_G)': { name: 'µ', alias: 'FR_DGRK', title: 'Dead Greek key' },
  'ALGR(KC_H)': {
    name: 'Eu',
    alias: 'FR_EU',
    title: 'Dead European symbol key'
  },
  'ALGR(KC_K)': { name: '∕', alias: 'FR_DSLS', title: '∕ (dead)' },
  'ALGR(KC_L)': { name: '|', alias: 'FR_PIPE', title: '|' },
  'ALGR(KC_SCLN)': { name: '∞', alias: 'FR_INFN', title: '∞' },
  'ALGR(KC_QUOT)': { name: '÷', alias: 'FR_DIV', title: '÷' },
  'ALGR(KC_NUHS)': { name: '×', alias: 'FR_MUL', title: '×' },
  // Row 4
  'ALGR(KC_NUBS)': { name: '≤', alias: 'FR_LEQL', title: '≤' },
  'ALGR(KC_Z)': { name: 'ʒ', alias: 'FR_EZH', title: 'ʒ' },
  'ALGR(KC_X)': { name: '©', alias: 'FR_COPY', title: '©' },
  'ALGR(KC_C)': { name: 'ç', alias: 'FR_CCED', title: 'ç' },
  'ALGR(KC_V)': { name: '¸', alias: 'FR_CEDL', title: '◌̧ (dead)' },
  'ALGR(KC_B)': { name: '−', alias: 'FR_DMNS', title: '− (dead)' },
  'ALGR(KC_N)': { name: '~', alias: 'FR_DTIL', title: '◌̃ (dead)' },
  'ALGR(KC_M)': { name: '¿', alias: 'FR_IQUE', title: '¿' },
  'ALGR(KC_COMM)': { name: '¡', alias: 'FR_IEXL', title: '¡' },
  'ALGR(KC_DOT)': { name: '·', alias: 'FR_MDDT', title: '·' },
  'ALGR(KC_SLSH)': { name: '≃', alias: 'FR_AEQL', title: '≃' },

  /* Shift+AltGr symbols
   * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐
   * │ ̑  │   │   │   │   │ ˝ │ ̏  │   │ — │ ‹ │ › │ ˚ │   │       │
   * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤
   * │     │   │   │   │   │ ™ │   │   │ ̣  │   │ ‰ │ ‑ │ ‡ │     │
   * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┐    │
   * │      │   │   │   │   │   │ ˍ │   │   │   │   │ √ │ ¼ │    │
   * ├────┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴───┴────┤
   * │    │ ≥ │   │   │   │ ˛ │   │   │   │ ̦  │   │ ≠ │          │
   * ├────┼───┴┬──┴─┬─┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤
   * │    │    │    │                        │    │    │    │    │
   * └────┴────┴────┴────────────────────────┴────┴────┴────┴────┘
   */
  // Row 1
  'S(ALGR(KC_GRV))': { name: '◌̑', alias: 'FR_IBRV', title: '◌̑ (dead)' },
  'S(ALGR(KC_5))': { name: '˝', alias: 'FR_DACU', title: '◌̋ (dead)' },
  'S(ALGR(KC_6))': { name: '◌̏', alias: 'FR_DGRV', title: '◌̏ (dead)' },
  'S(ALGR(KC_8))': { name: '—', alias: 'FR_MDSH', title: '—' },
  'S(ALGR(KC_9))': { name: '‹', alias: 'FR_LSAQ', title: '‹' },
  'S(ALGR(KC_0))': { name: '›', alias: 'FR_RSAQ', title: '›' },
  'S(ALGR(KC_MINS))': { name: '˚', alias: 'FR_RNGA', title: '◌̊ (dead)' },
  // Row 2
  'S(ALGR(KC_T))': { name: '™', alias: 'FR_TM', title: '™' },
  'S(ALGR(KC_I))': { name: '◌̣', alias: 'FR_DOTB', title: '◌̣ (dead)' },
  'S(ALGR(KC_P))': { name: '‰', alias: 'FR_PERM', title: '‰' },
  'S(ALGR(KC_LBRC))': {
    name: '‑',
    alias: 'FR_NBHY',
    title: 'Non-breaking hyphen'
  },
  'S(ALGR(KC_RBRC))': { name: '‡', alias: 'FR_DDAG', title: '‡' },
  // Row 3
  'S(ALGR(KC_H))': { name: 'ˍ', alias: 'FR_MACB', title: '◌̱ (dead)' },
  'S(ALGR(KC_QUOT))': { name: '√', alias: 'FR_SQRT', title: '√' },
  'S(ALGR(KC_NUHS))': { name: '¼', alias: 'FR_QRTR', title: '¼' },
  // Row 4
  'S(ALGR(KC_NUBS))': { name: '≥', alias: 'FR_GEQL', title: '≥' },
  'S(ALGR(KC_V))': { name: '˛', alias: 'FR_OGON', title: '◌̨ (dead)' },
  'S(ALGR(KC_COMM))': { name: '◌̦', alias: 'FR_DCMM', title: '◌̦ (dead)' },
  'S(ALGR(KC_SLSH))': { name: '≠', alias: 'FR_NEQL', title: '≠' },

  /* Other keys */
  KC_BSLS: { name: '½\n*', title: '* and ½' },
  'S(KC_BSLS)': { name: '½', title: '½' },
  KC_COLN: { name: 'M', alias: 'S(FR_M)', title: 'M' },
  KC_PIPE: { name: '½', alias: 'FR_HALF', title: '½' },

  SC_LSPO: { name: 'LS / 9', title: 'Left Shift when held, 9 when tapped' },
  SC_RSPC: { name: 'RS / 0', title: 'Right Shift when held, 0 when tapped' },
  SC_LCPO: { name: 'LC / 9', title: 'Left Control when held, 9 when tapped' },
  SC_RCPC: { name: 'RC / 0', title: 'Right Control when held, 0 when tapped' },
  SC_LAPO: { name: 'LA / 9', title: 'Left Alt when held, 9 when tapped' },
  SC_RAPC: { name: 'RA / 0', title: 'Right Alt when held, 0 when tapped' },

  QK_GESC: {
    name: '@/#\nEsc',
    title: 'Esc normally, but @ when GUI is active or # when Shift is active'
  }
};
