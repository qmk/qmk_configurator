     {
       "created_at": "Sun, 03 Apr 2022 18:04:13 GMT",
       "enqueued_at": "Sun, 03 Apr 2022 18:04:13 GMT",
       "id": "ea1514b3-bdfc-4a7b-9b5c-08752684f7f6",
       "is_failed": false,
       "status": "finished",
       "result": {
         "keyboard": "newgame40",
         "returncode": 0,
         "output": "Î¨ Compiling keymap with make -s --jobs=1 -r -R -f builddefs/build_keyboard.mk KEYBOARD=newgame40 KEYMAP=layout_ortho_4x10_mine KEYBOARD_FILESAFE=newgame40 TARGET=newgame40_layout_ortho_4x10_mine KEYBOARD_OUTPUT=.build/obj_newgame40 KEYMAP_OUTPUT=.build/obj_newgame40_layout_ortho_4x10_mine MAIN_KEYMAP_PATH_1=.build/obj_newgame40_layout_ortho_4x10_mine MAIN_KEYMAP_PATH_2=.build/obj_newgame40_layout_ortho_4x10_mine MAIN_KEYMAP_PATH_3=.build/obj_newgame40_layout_ortho_4x10_mine MAIN_KEYMAP_PATH_4=.build/obj_newgame40_layout_ortho_4x10_mine MAIN_KEYMAP_PATH_5=.build/obj_newgame40_layout_ortho_4x10_mine KEYMAP_C=.build/obj_newgame40_layout_ortho_4x10_mine/src/keymap.c KEYMAP_PATH=.build/obj_newgame40_layout_ortho_4x10_mine/src VERBOSE=false COLOR=true SILENT=false QMK_BIN=\"qmk\"\n\n\navr-gcc (GCC) 5.4.0\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nGenerating: .build/obj_newgame40/src/info_config.h                                                  \u001b[32;01m[OK]\u001b[0m\nGenerating: .build/obj_newgame40/src/default_keyboard.h                                             \u001b[32;01m[OK]\u001b[0m\nGenerating: .build/obj_newgame40/src/layouts.h                                                      \u001b[32;01m[OK]\u001b[0m\nCompiling: keyboards/newgame40/newgame40.c                                                          \u001b[32;01m[OK]\u001b[0m\nCompiling: .build/obj_newgame40_layout_ortho_4x10_mine/src/keymap.c                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/quantum.c                                                                        \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/send_string.c                                                                    \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/bitwise.c                                                                        \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/led.c                                                                            \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/action.c                                                                         \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/action_layer.c                                                                   \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/action_tapping.c                                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/action_util.c                                                                    \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/eeconfig.c                                                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/keyboard.c                                                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/keymap_common.c                                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/keycode_config.c                                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/sync_timer.c                                                                     \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/logging/debug.c                                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/logging/sendchar.c                                                               \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/bootmagic/bootmagic_lite.c                                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/bootmagic/magic.c                                                                \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/matrix_common.c                                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/matrix.c                                                                         \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/debounce/sym_defer_g.c                                                           \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/main.c                                                                           \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/mousekey.c                                                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/color.c                                                                          \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/rgblight/rgblight.c                                                              \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_rgb.c                                                    \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/drivers/ws2812.c                                                           \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/led_tables.c                                                                     \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_unicode.c                                                \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_unicode_common.c                                         \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_magic.c                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_grave_esc.c                                              \u001b[32;01m[OK]\u001b[0m\nCompiling: quantum/process_keycode/process_space_cadet.c                                            \u001b[32;01m[OK]\u001b[0m\nAssembling: platforms/avr/xprintf.S                                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/printf.c                                                                   \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/host.c                                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/report.c                                                               \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/usb_device_state.c                                                     \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/usb_util.c                                                             \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/suspend.c                                                                      \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/platform.c                                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/suspend.c                                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/timer.c                                                                    \u001b[32;01m[OK]\u001b[0m\nCompiling: platforms/avr/bootloaders/caterina.c                                                     \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/lufa/lufa.c                                                            \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/usb_descriptor.c                                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Class/Common/HIDParser.c                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c                                        \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c                                \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c                                      \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Host_AVR8.c                                          \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/PipeStream_AVR8.c                                    \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/Pipe_AVR8.c                                          \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/ConfigDescriptors.c                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/DeviceStandardReq.c                                       \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/Events.c                                                  \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.c                                         \u001b[32;01m[OK]\u001b[0m\nCompiling: lib/lufa/LUFA/Drivers/USB/Core/USBTask.c                                                 \u001b[32;01m[OK]\u001b[0m\nCompiling: tmk_core/protocol/lufa/usb_util.c                                                        \u001b[32;01m[OK]\u001b[0m\nLinking: .build/newgame40_layout_ortho_4x10_mine.elf                                                \u001b[32;01m[OK]\u001b[0m\nCreating load file for flashing: .build/newgame40_layout_ortho_4x10_mine.hex                        \u001b[32;01m[OK]\u001b[0m\nCopying newgame40_layout_ortho_4x10_mine.hex to qmk_firmware folder                                 \u001b[32;01m[OK]\u001b[0m\nChecking file size of newgame40_layout_ortho_4x10_mine.hex                                          \u001b[32;01m[OK]\u001b[0m\n * The firmware size is fine - 22604/28672 (78%, 6068 bytes free)\n",
         "firmware": null,
         "firmware_filename": "newgame40_layout_ortho_4x10_mine.hex",
         "source_ip": "1.2.3.4",
         "public_firmware": false,
         "layout": "LAYOUT_ortho_4x10",
         "keymap": "layout_ortho_4x10_mine",
         "keymap_archive": "newgame40-layout_ortho_4x10_mine.json",
         "keymap_json": "{\"version\": 1, \"notes\": \"\", \"documentation\": \"\\\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\\n\\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\\n\\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\\n\\nYou can compile this keymap using this command: `qmk compile {keymap}`\\\"\\n\", \"keyboard\": \"newgame40\", \"keymap\": \"layout_ortho_4x10_mine\", \"layout\": \"LAYOUT_ortho_4x10\", \"layers\": [[\"KC_Q\", \"KC_W\", \"KC_E\", \"KC_R\", \"KC_T\", \"KC_Y\", \"KC_U\", \"KC_I\", \"KC_O\", \"KC_P\", \"KC_A\", \"KC_S\", \"KC_D\", \"KC_F\", \"KC_G\", \"KC_H\", \"KC_J\", \"KC_K\", \"KC_L\", \"KC_MINS\", \"KC_Z\", \"KC_X\", \"KC_C\", \"KC_V\", \"KC_B\", \"KC_N\", \"KC_M\", \"KC_COMM\", \"KC_DOT\", \"KC_SLSH\", \"KC_LSFT\", \"KC_LGUI\", \"LT(4,KC_LANG2)\", \"KC_LCTL\", \"KC_SPC\", \"KC_BSPC\", \"KC_ENT\", \"LT(5,KC_LANG1)\", \"KC_LEFT\", \"KC_RGHT\"], [\"KC_Q\", \"KC_W\", \"KC_F\", \"KC_P\", \"KC_G\", \"KC_J\", \"KC_L\", \"KC_U\", \"KC_Y\", \"KC_MINS\", \"KC_A\", \"KC_R\", \"KC_S\", \"KC_T\", \"KC_D\", \"KC_H\", \"KC_N\", \"KC_E\", \"KC_I\", \"KC_O\", \"KC_Z\", \"KC_X\", \"KC_C\", \"KC_V\", \"KC_B\", \"KC_K\", \"KC_M\", \"KC_COMM\", \"KC_DOT\", \"KC_SLSH\", \"KC_LSFT\", \"KC_LGUI\", \"LT(4,KC_LANG2)\", \"KC_LCTL\", \"KC_SPC\", \"KC_BSPC\", \"KC_ENT\", \"LT(5,KC_LANG1)\", \"KC_LEFT\", \"KC_RGHT\"], [\"KC_QUOT\", \"KC_COMM\", \"KC_DOT\", \"KC_P\", \"KC_Y\", \"KC_F\", \"KC_G\", \"KC_C\", \"KC_R\", \"KC_L\", \"KC_A\", \"KC_O\", \"KC_E\", \"KC_U\", \"KC_I\", \"KC_D\", \"KC_H\", \"KC_T\", \"KC_N\", \"KC_S\", \"KC_SCLN\", \"KC_Q\", \"KC_J\", \"KC_K\", \"KC_X\", \"KC_B\", \"KC_M\", \"KC_W\", \"KC_V\", \"KC_Z\", \"KC_LSFT\", \"KC_LGUI\", \"LT(4,KC_LANG2)\", \"KC_LCTL\", \"KC_SPC\", \"KC_BSPC\", \"KC_ENT\", \"LT(5,KC_LANG1)\", \"KC_LEFT\", \"KC_RGHT\"], [\"KC_Q\", \"KC_W\", \"KC_COMM\", \"KC_DOT\", \"KC_SCLN\", \"KC_M\", \"KC_R\", \"KC_D\", \"KC_Y\", \"KC_P\", \"KC_A\", \"KC_O\", \"KC_E\", \"KC_I\", \"KC_U\", \"KC_G\", \"KC_T\", \"KC_K\", \"KC_S\", \"KC_N\", \"KC_Z\", \"KC_X\", \"KC_C\", \"KC_V\", \"KC_F\", \"KC_B\", \"KC_H\", \"KC_J\", \"KC_L\", \"KC_SLSH\", \"KC_LSFT\", \"KC_LGUI\", \"LT(4,KC_LANG2)\", \"KC_LCTL\", \"KC_SPC\", \"KC_BSPC\", \"KC_ENT\", \"LT(5,KC_LANG1)\", \"KC_LEFT\", \"KC_RGHT\"], [\"KC_ESC\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_F13\", \"KC_F14\", \"KC_F15\", \"KC_F16\", \"KC_F17\", \"KC_F18\", \"KC_F19\", \"KC_F20\", \"KC_F21\", \"KC_F22\", \"KC_F1\", \"KC_F2\", \"KC_TRNS\", \"KC_F3\", \"KC_F4\", \"KC_F5\", \"KC_F6\", \"KC_TRNS\", \"KC_F7\", \"KC_F8\"], [\"KC_1\", \"KC_2\", \"KC_3\", \"KC_4\", \"KC_5\", \"KC_6\", \"KC_7\", \"KC_8\", \"KC_9\", \"KC_0\", \"KC_EXLM\", \"KC_DQUO\", \"KC_HASH\", \"KC_DLR\", \"KC_PERC\", \"KC_AMPR\", \"KC_QUOT\", \"KC_LPRN\", \"KC_RPRN\", \"KC_UNDS\", \"KC_EQL\", \"KC_JYEN\", \"KC_LCBR\", \"KC_RCBR\", \"KC_ASTR\", \"KC_TILD\", \"KC_PIPE\", \"KC_LT\", \"KC_GT\", \"KC_QUES\", \"KC_F1\", \"KC_LALT\", \"KC_TRNS\", \"KC_LBRC\", \"KC_RBRC\", \"KC_SCLN\", \"KC_COLN\", \"KC_TRNS\", \"KC_BSLS\", \"KC_SLSH\"], [\"KC_TRNS\", \"RGB_TOG\", \"RGB_MOD\", \"RGB_HUD\", \"RGB_HUI\", \"RGB_SAD\", \"RGB_SAI\", \"RGB_VAD\", \"RGB_VAI\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"AU_ON\", \"AU_OFF\", \"AG_NORM\", \"AG_SWAP\", \"KC_TRNS\", \"BL_TOGG\", \"BL_STEP\", \"TO(0)\", \"TO(1)\", \"TO(2)\", \"TO(3)\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\", \"KC_TRNS\"]]}",
         "command": [
           "qmk",
           "compile",
           "newgame40-layout_ortho_4x10_mine.json"
         ],
         "id": "ca230f62-b4e6-4647-8fc0-0c3879ab0d5e",
         "firmware_binary_url": [
           "https://api.qmk.fm/v1/compile/ca230f62-b4e6-4647-8fc0-0c3879ab0d5e/download"
         ],
         "source_archive": "qmk_firmware-newgame40-layout_ortho_4x10_mine.zip",
         "firmware_keymap_url": [
           "https://api.qmk.fm/v1/compile/ca230f62-b4e6-4647-8fc0-0c3879ab0d5e/keymap"
         ],
         "firmware_source_url": [
           "https://api.qmk.fm/v1/compile/ca230f62-b4e6-4647-8fc0-0c3879ab0d5e/source"
         ]
       }
     }
